{"version":3,"file":"lib_index_js.bc7e13bb06b1c689a666.js","mappings":"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","sources":["webpack://jupyter-dvre-dal/./src/CWLManager.ts","webpack://jupyter-dvre-dal/./src/CWLWorkflowEditor.tsx","webpack://jupyter-dvre-dal/./src/ContributorManager.tsx","webpack://jupyter-dvre-dal/./src/DALComponent.tsx","webpack://jupyter-dvre-dal/./src/DALWidget.tsx","webpack://jupyter-dvre-dal/./src/OrchestrationAPI.ts","webpack://jupyter-dvre-dal/./src/RuntimeOrchestrationPanel.tsx","webpack://jupyter-dvre-dal/./src/index.ts","webpack://jupyter-dvre-dal/./src/integration/DVREIntegration.ts"],"sourcesContent":["/**\n * Client-Side CWL Manager for DVRE DAL Extension\n * Handles local storage, auto-save, and validation of CWL workflows\n */\n\nexport interface ALConfiguration {\n  queryStrategy: string;\n  modelConfig: any;\n  labelingBudget: number;\n  maxIterations: number;\n  isFederated: boolean;\n  contributors: string[];\n  dataset?: string;\n  validationSplit?: number;\n}\n\nexport interface CWLWorkflow {\n  cwlVersion: string;\n  class: string;\n  id: string;\n  label?: string;\n  inputs: Record<string, any>;\n  outputs: Record<string, any>;\n  steps: Record<string, any>;\n}\n\nexport interface CWLMetadata {\n  creator: string;\n  lastModified: string;\n  version: number;\n  autoSaved: boolean;\n  status: 'draft' | 'finalized' | 'deployed';\n  finalizedAt?: string;\n  deployedAt?: string;\n  workflowId?: string;\n  projectTitle?: string;\n  alConfig?: ALConfiguration;\n}\n\nexport interface StoredCWL {\n  cwl: CWLWorkflow;\n  metadata: CWLMetadata;\n}\n\nexport class ClientCWLManager {\n  private storageKey = 'dvre-project-cwls';\n  private autoSaveCallbacks: Map<string, () => void> = new Map();\n\n  constructor() {\n    // Clean up old auto-save entries on initialization\n    this.cleanupOldEntries();\n  }\n\n  /**\n   * Save CWL workflow locally (project creator only)\n   */\n  saveCWL(projectId: string, cwlWorkflow: CWLWorkflow, metadata: Partial<CWLMetadata> = {}): void {\n    const storage = this.getProjectCWLs();\n    const existingData = storage[projectId];\n    \n    const updatedMetadata: CWLMetadata = {\n      creator: this.getCurrentUser(),\n      lastModified: new Date().toISOString(),\n      version: existingData ? existingData.metadata.version + 1 : 1,\n      autoSaved: metadata.autoSaved || false,\n      status: metadata.status || 'draft',\n      ...existingData?.metadata,\n      ...metadata\n    };\n\n    storage[projectId] = {\n      cwl: cwlWorkflow,\n      metadata: updatedMetadata\n    };\n\n    localStorage.setItem(this.storageKey, JSON.stringify(storage));\n    this.notifyAutoSave(projectId);\n  }\n\n  /**\n   * Load CWL workflow (only if user is project creator)\n   */\n  loadCWL(projectId: string): StoredCWL | null {\n    const storage = this.getProjectCWLs();\n    const cwlData = storage[projectId];\n\n    if (!cwlData) return null;\n\n    // Verify user is the creator\n    if (cwlData.metadata.creator !== this.getCurrentUser()) {\n      throw new Error('Access denied: Only project creator can edit CWL');\n    }\n\n    return cwlData;\n  }\n\n  /**\n   * Auto-save while editing\n   */\n  autoSave(projectId: string, cwlWorkflow: CWLWorkflow): void {\n    this.saveCWL(projectId, cwlWorkflow, {\n      autoSaved: true,\n      status: 'draft'\n    });\n  }\n\n  /**\n   * Mark as finalized (ready for deployment)\n   */\n  finalizeCWL(projectId: string): boolean {\n    const cwlData = this.loadCWL(projectId);\n    if (!cwlData) return false;\n\n    // Validate CWL before finalizing\n    if (!this.validateCWL(cwlData.cwl)) {\n      throw new Error('CWL validation failed');\n    }\n\n    this.saveCWL(projectId, cwlData.cwl, {\n      ...cwlData.metadata,\n      status: 'finalized',\n      finalizedAt: new Date().toISOString()\n    });\n\n    return true;\n  }\n\n  /**\n   * Mark as deployed\n   */\n  markAsDeployed(projectId: string, workflowId: string): void {\n    const cwlData = this.loadCWL(projectId);\n    if (!cwlData) return;\n\n    this.saveCWL(projectId, cwlData.cwl, {\n      ...cwlData.metadata,\n      status: 'deployed',\n      deployedAt: new Date().toISOString(),\n      workflowId: workflowId\n    });\n  }\n\n  /**\n   * Check if user can edit CWL for this project\n   */\n  canEdit(projectId: string): boolean {\n    try {\n      const cwlData = this.loadCWL(projectId);\n      return cwlData !== null;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Get CWL status for project\n   */\n  getStatus(projectId: string): string {\n    const cwlData = this.loadCWL(projectId);\n    return cwlData?.metadata.status || 'none';\n  }\n\n  /**\n   * Validate CWL workflow structure\n   */\n  validateCWL(cwl: CWLWorkflow): boolean {\n    try {\n      // Check required fields\n      if (!cwl.cwlVersion || !cwl.class) return false;\n\n      // Validate CWL version\n      if (!['v1.0', 'v1.1', 'v1.2'].includes(cwl.cwlVersion)) return false;\n\n      // Validate class\n      if (!['Workflow', 'CommandLineTool', 'ExpressionTool'].includes(cwl.class)) return false;\n\n      // Check for inputs and outputs in workflows\n      if (cwl.class === 'Workflow') {\n        if (!cwl.inputs || !cwl.outputs || !cwl.steps) return false;\n      }\n\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Create basic AL workflow template\n   */\n  createALTemplate(projectId: string, projectTitle: string, alConfig: ALConfiguration): CWLWorkflow {\n    return {\n      cwlVersion: \"v1.0\",\n      class: \"Workflow\",\n      id: projectId,\n      label: `Active Learning Workflow - ${projectTitle}`,\n      inputs: {\n        dataset: {\n          type: \"File\",\n          doc: \"Training dataset for active learning\"\n        },\n        query_strategy: {\n          type: \"string\",\n          default: alConfig.queryStrategy,\n          doc: \"Active learning query strategy\"\n        },\n        model_config: {\n          type: \"string\",\n          default: JSON.stringify(alConfig.modelConfig),\n          doc: \"Model configuration JSON\"\n        },\n        labeling_budget: {\n          type: \"int\",\n          default: alConfig.labelingBudget,\n          doc: \"Number of samples to label per iteration\"\n        },\n        max_iterations: {\n          type: \"int\",\n          default: alConfig.maxIterations,\n          doc: \"Maximum AL iterations\"\n        },\n        validation_split: {\n          type: \"float\",\n          default: alConfig.validationSplit || 0.2,\n          doc: \"Validation data split ratio\"\n        }\n      },\n      outputs: {\n        trained_model: {\n          type: \"File\",\n          outputSource: \"active_learning/final_model\"\n        },\n        learning_curve: {\n          type: \"File\",\n          outputSource: \"active_learning/metrics\"\n        },\n        selected_samples: {\n          type: \"File\",\n          outputSource: \"active_learning/queries\"\n        }\n      },\n      steps: {\n        data_preprocessing: {\n          run: \"data_preprocessing.cwl\",\n          in: {\n            raw_dataset: \"dataset\",\n            validation_ratio: \"validation_split\"\n          },\n          out: [\"clean_data\", \"validation_split\"]\n        },\n        active_learning: {\n          run: \"active_learning_pipeline.cwl\",\n          in: {\n            training_data: \"data_preprocessing/clean_data\",\n            validation_data: \"data_preprocessing/validation_split\",\n            strategy: \"query_strategy\",\n            model: \"model_config\",\n            budget: \"labeling_budget\",\n            iterations: \"max_iterations\"\n          },\n          out: [\"final_model\", \"metrics\", \"queries\"]\n        }\n      }\n    };\n  }\n\n  /**\n   * Update CWL with new AL configuration\n   */\n  updateALConfiguration(projectId: string, alConfig: ALConfiguration): void {\n    const cwlData = this.loadCWL(projectId);\n    if (!cwlData) return;\n\n    const updatedCWL = { ...cwlData.cwl };\n\n    // Update inputs based on AL configuration\n    updatedCWL.inputs.query_strategy.default = alConfig.queryStrategy;\n    updatedCWL.inputs.model_config.default = JSON.stringify(alConfig.modelConfig);\n    updatedCWL.inputs.labeling_budget.default = alConfig.labelingBudget;\n    updatedCWL.inputs.max_iterations.default = alConfig.maxIterations;\n\n    // Add contributor-specific inputs if federated\n    if (alConfig.isFederated) {\n      updatedCWL.inputs.contributors = {\n        type: \"string[]\",\n        default: alConfig.contributors,\n        doc: \"List of federated learning contributors\"\n      };\n\n      // Add federated learning step\n      updatedCWL.steps.federated_coordination = {\n        run: \"federated_coordination.cwl\",\n        in: {\n          contributors: \"contributors\",\n          model_updates: \"active_learning/model_updates\"\n        },\n        out: [\"aggregated_model\", \"coordination_log\"]\n      };\n    }\n\n    this.saveCWL(projectId, updatedCWL, {\n      ...cwlData.metadata,\n      alConfig: alConfig\n    });\n  }\n\n  /**\n   * Set up auto-save for a project\n   */\n  setupAutoSave(projectId: string, getCWLCallback: () => CWLWorkflow, intervalMs: number = 30000): void {\n    // Clear existing interval\n    this.clearAutoSave(projectId);\n\n    const autoSaveFunction = () => {\n      try {\n        const cwl = getCWLCallback();\n        if (cwl) {\n          this.autoSave(projectId, cwl);\n        }\n      } catch (error) {\n        console.warn(`Auto-save failed for project ${projectId}:`, error);\n      }\n    };\n\n    const intervalId = setInterval(autoSaveFunction, intervalMs);\n    this.autoSaveCallbacks.set(projectId, () => clearInterval(intervalId));\n  }\n\n  /**\n   * Clear auto-save for a project\n   */\n  clearAutoSave(projectId: string): void {\n    const clearCallback = this.autoSaveCallbacks.get(projectId);\n    if (clearCallback) {\n      clearCallback();\n      this.autoSaveCallbacks.delete(projectId);\n    }\n  }\n\n  /**\n   * Get all projects with CWL workflows\n   */\n  getAllProjects(): string[] {\n    const storage = this.getProjectCWLs();\n    return Object.keys(storage);\n  }\n\n  /**\n   * Delete CWL for a project\n   */\n  deleteCWL(projectId: string): boolean {\n    const storage = this.getProjectCWLs();\n    if (storage[projectId]) {\n      delete storage[projectId];\n      localStorage.setItem(this.storageKey, JSON.stringify(storage));\n      this.clearAutoSave(projectId);\n      return true;\n    }\n    return false;\n  }\n\n  // Private methods\n\n  private getProjectCWLs(): Record<string, StoredCWL> {\n    try {\n      const stored = localStorage.getItem(this.storageKey);\n      return stored ? JSON.parse(stored) : {};\n    } catch (error) {\n      console.error('Failed to parse stored CWL data:', error);\n      return {};\n    }\n  }\n\n  private getCurrentUser(): string {\n    // In a real implementation, this would get the user from auth system\n    // For now, we'll use a simple identifier\n    return localStorage.getItem('dvre-user-id') || 'anonymous';\n  }\n\n  private notifyAutoSave(projectId: string): void {\n    // Dispatch custom event for UI components to listen to\n    window.dispatchEvent(new CustomEvent('dvre-cwl-saved', {\n      detail: { projectId, timestamp: new Date().toISOString() }\n    }));\n  }\n\n  private cleanupOldEntries(maxAgeMs: number = 7 * 24 * 60 * 60 * 1000): void {\n    // Clean up entries older than 7 days by default\n    const storage = this.getProjectCWLs();\n    const now = new Date().getTime();\n    let hasChanges = false;\n\n    for (const [projectId, data] of Object.entries(storage)) {\n      const lastModified = new Date(data.metadata.lastModified).getTime();\n      if (now - lastModified > maxAgeMs && data.metadata.status === 'draft') {\n        delete storage[projectId];\n        hasChanges = true;\n      }\n    }\n\n    if (hasChanges) {\n      localStorage.setItem(this.storageKey, JSON.stringify(storage));\n    }\n  }\n}\n\n// Export singleton instance\nexport const cwlManager = new ClientCWLManager(); ","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { cwlManager, ALConfiguration, CWLWorkflow, StoredCWL } from './CWLManager';\nimport { orchestrationAPI, WorkflowStatus } from './OrchestrationAPI';\nimport { ContributorManager } from './ContributorManager';\n\ninterface CWLWorkflowEditorProps {\n  projectId: string;\n  projectTitle: string;\n  userWallet?: string;\n  projectData?: any; // DVRE project data with roles and participants\n  onClose?: () => void;\n  onWorkflowDeployed?: (workflowId: string) => void;\n}\n\ninterface AutoSaveIndicatorProps {\n  lastSaved?: string;\n  isAutoSaving?: boolean;\n}\n\nconst AutoSaveIndicator: React.FC<AutoSaveIndicatorProps> = ({ lastSaved, isAutoSaving }) => {\n  if (isAutoSaving) {\n    return (\n      <div className=\"autosave-indicator saving\">\n        <span className=\"dot-animation\">●</span> Auto-saving...\n      </div>\n    );\n  }\n\n  if (lastSaved) {\n    const timeAgo = new Date(lastSaved).toLocaleTimeString();\n    return (\n      <div className=\"autosave-indicator saved\">\n        ✓ Saved at {timeAgo}\n      </div>\n    );\n  }\n\n  return null;\n};\n\ninterface ALConfigurationPanelProps {\n  config: ALConfiguration;\n  onChange: (config: ALConfiguration) => void;\n  disabled?: boolean;\n}\n\nconst ALConfigurationPanel: React.FC<ALConfigurationPanelProps> = ({ \n  config, \n  onChange, \n  disabled = false \n}) => {\n  const updateConfig = (updates: Partial<ALConfiguration>) => {\n    onChange({ ...config, ...updates });\n  };\n\n  return (\n    <div className=\"al-config-panel\">\n      <h3>Active Learning Configuration</h3>\n      \n      <div className=\"config-grid\">\n        <div className=\"config-group\">\n          <label htmlFor=\"query-strategy\">Query Strategy:</label>\n          <select\n            id=\"query-strategy\"\n            value={config.queryStrategy}\n            onChange={(e) => updateConfig({ queryStrategy: e.target.value })}\n            disabled={disabled}\n          >\n            <option value=\"uncertainty_sampling\">Uncertainty Sampling</option>\n            <option value=\"diversity_sampling\">Diversity Sampling</option>\n            <option value=\"query_by_committee\">Query by Committee</option>\n            <option value=\"expected_model_change\">Expected Model Change</option>\n            <option value=\"random_sampling\">Random Sampling</option>\n          </select>\n        </div>\n\n        <div className=\"config-group\">\n          <label htmlFor=\"labeling-budget\">Labeling Budget:</label>\n          <input\n            id=\"labeling-budget\"\n            type=\"number\"\n            min=\"1\"\n            max=\"10000\"\n            value={config.labelingBudget}\n            onChange={(e) => updateConfig({ labelingBudget: parseInt(e.target.value) || 100 })}\n            disabled={disabled}\n          />\n        </div>\n\n        <div className=\"config-group\">\n          <label htmlFor=\"max-iterations\">Max Iterations:</label>\n          <input\n            id=\"max-iterations\"\n            type=\"number\"\n            min=\"1\"\n            max=\"100\"\n            value={config.maxIterations}\n            onChange={(e) => updateConfig({ maxIterations: parseInt(e.target.value) || 10 })}\n            disabled={disabled}\n          />\n        </div>\n\n        <div className=\"config-group\">\n          <label htmlFor=\"validation-split\">Validation Split:</label>\n          <input\n            id=\"validation-split\"\n            type=\"number\"\n            min=\"0.1\"\n            max=\"0.5\"\n            step=\"0.05\"\n            value={config.validationSplit || 0.2}\n            onChange={(e) => updateConfig({ validationSplit: parseFloat(e.target.value) || 0.2 })}\n            disabled={disabled}\n          />\n        </div>\n      </div>\n\n      <div className=\"config-group\">\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={config.isFederated}\n            onChange={(e) => updateConfig({ isFederated: e.target.checked })}\n            disabled={disabled}\n          />\n          Enable Federated Learning\n        </label>\n      </div>\n\n      {config.isFederated && (\n        <div className=\"config-group\">\n          <label htmlFor=\"contributors\">Contributors (comma-separated):</label>\n          <input\n            id=\"contributors\"\n            type=\"text\"\n            value={config.contributors.join(', ')}\n            onChange={(e) => updateConfig({ \n              contributors: e.target.value.split(',').map(s => s.trim()).filter(s => s) \n            })}\n            placeholder=\"alice@example.com, bob@example.com\"\n            disabled={disabled}\n          />\n        </div>\n      )}\n\n      <div className=\"config-group\">\n        <label htmlFor=\"model-config\">Model Configuration (JSON):</label>\n        <textarea\n          id=\"model-config\"\n          value={JSON.stringify(config.modelConfig, null, 2)}\n          onChange={(e) => {\n            try {\n              const parsed = JSON.parse(e.target.value);\n              updateConfig({ modelConfig: parsed });\n            } catch (error) {\n              // Invalid JSON, but still update to show user's input\n              updateConfig({ modelConfig: e.target.value });\n            }\n          }}\n          rows={8}\n          disabled={disabled}\n          placeholder='{\"model_type\": \"neural_network\", \"layers\": [64, 32], \"learning_rate\": 0.001}'\n        />\n      </div>\n    </div>\n  );\n};\n\ninterface CWLCodeEditorProps {\n  cwl: CWLWorkflow;\n  onChange: (cwl: CWLWorkflow) => void;\n  disabled?: boolean;\n}\n\nconst CWLCodeEditor: React.FC<CWLCodeEditorProps> = ({ cwl, onChange, disabled = false }) => {\n  const [jsonText, setJsonText] = useState('');\n  const [isValid, setIsValid] = useState(true);\n\n  useEffect(() => {\n    setJsonText(JSON.stringify(cwl, null, 2));\n  }, [cwl]);\n\n  const handleChange = (value: string) => {\n    setJsonText(value);\n    \n    try {\n      const parsed = JSON.parse(value);\n      setIsValid(true);\n      onChange(parsed);\n    } catch (error) {\n      setIsValid(false);\n    }\n  };\n\n  return (\n    <div className=\"cwl-code-editor\">\n      <h3>CWL Workflow Definition</h3>\n      <div className={`editor-container ${!isValid ? 'invalid' : ''}`}>\n        <textarea\n          value={jsonText}\n          onChange={(e) => handleChange(e.target.value)}\n          disabled={disabled}\n          rows={25}\n          className=\"cwl-textarea\"\n          spellCheck={false}\n        />\n        {!isValid && (\n          <div className=\"validation-error\">\n            Invalid JSON syntax. Please check your formatting.\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\ninterface WorkflowValidationPanelProps {\n  cwl: CWLWorkflow;\n}\n\nconst WorkflowValidationPanel: React.FC<WorkflowValidationPanelProps> = ({ cwl }) => {\n  const [validation, setValidation] = useState<{\n    valid: boolean;\n    errors: string[];\n    warnings: string[];\n  } | null>(null);\n\n  useEffect(() => {\n    const isValid = cwlManager.validateCWL(cwl);\n    // For now, just basic validation - could be enhanced\n    setValidation({\n      valid: isValid,\n      errors: isValid ? [] : ['CWL validation failed'],\n      warnings: []\n    });\n  }, [cwl]);\n\n  if (!validation) return null;\n\n  return (\n    <div className=\"validation-panel\">\n      <h3>Validation Status</h3>\n      <div className={`validation-status ${validation.valid ? 'valid' : 'invalid'}`}>\n        {validation.valid ? (\n          <div className=\"validation-success\">\n            ✓ Workflow is valid and ready for deployment\n          </div>\n        ) : (\n          <div className=\"validation-errors\">\n            <h4>Errors:</h4>\n            <ul>\n              {validation.errors.map((error, index) => (\n                <li key={index}>{error}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n        \n        {validation.warnings.length > 0 && (\n          <div className=\"validation-warnings\">\n            <h4>Warnings:</h4>\n            <ul>\n              {validation.warnings.map((warning, index) => (\n                <li key={index}>{warning}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\ninterface DeploymentPanelProps {\n  onDeploy: () => Promise<void>;\n  status: string;\n  workflowId?: string;\n  canDeploy: boolean;\n  isDeploying: boolean;\n  error?: string;\n}\n\nconst DeploymentPanel: React.FC<DeploymentPanelProps> = ({\n  onDeploy,\n  status,\n  workflowId,\n  canDeploy,\n  isDeploying,\n  error\n}) => {\n  return (\n    <div className=\"deployment-panel\">\n      <h3>Deployment</h3>\n      \n      <div className=\"deployment-status\">\n        <span className={`status-badge ${status}`}>\n          {status.toUpperCase()}\n        </span>\n        \n        {workflowId && (\n          <div className=\"workflow-id\">\n            Workflow ID: <code>{workflowId}</code>\n          </div>\n        )}\n      </div>\n\n      {error && (\n        <div className=\"deployment-error\">\n          <strong>Deployment Error:</strong> {error}\n        </div>\n      )}\n\n      <button\n        onClick={onDeploy}\n        disabled={!canDeploy || isDeploying}\n        className={`deploy-button ${canDeploy ? 'ready' : 'disabled'}`}\n      >\n        {isDeploying ? 'Deploying...' : 'Deploy Workflow'}\n      </button>\n      \n      <div className=\"deployment-info\">\n        {canDeploy ? (\n          <p>Ready to deploy to orchestration server</p>\n        ) : (\n          <p>Fix validation errors before deploying</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport const CWLWorkflowEditor: React.FC<CWLWorkflowEditorProps> = ({\n  projectId,\n  projectTitle,\n  userWallet,\n  projectData,\n  onClose,\n  onWorkflowDeployed\n}) => {\n  const [cwlWorkflow, setCwlWorkflow] = useState<CWLWorkflow | null>(null);\n  const [metadata, setMetadata] = useState<any>(null);\n  const [readOnly, setReadOnly] = useState(false);\n  const [lastAutoSave, setLastAutoSave] = useState<string | null>(null);\n  const [isAutoSaving, setIsAutoSaving] = useState(false);\n  const [deploymentStatus, setDeploymentStatus] = useState<string>('draft');\n  const [workflowId, setWorkflowId] = useState<string | null>(null);\n  const [isDeploying, setIsDeploying] = useState(false);\n  const [deploymentError, setDeploymentError] = useState<string | null>(null);\n  const [alConfig, setAlConfig] = useState<ALConfiguration>({\n    queryStrategy: 'uncertainty_sampling',\n    modelConfig: {\n      model_type: 'neural_network',\n      layers: [64, 32],\n      learning_rate: 0.001,\n      batch_size: 32\n    },\n    labelingBudget: 100,\n    maxIterations: 10,\n    isFederated: false,\n    contributors: [],\n    validationSplit: 0.2\n  });\n\n  const autoSaveTimeoutRef = useRef<number>();\n\n  // Load or create CWL workflow\n  useEffect(() => {\n    loadOrCreateCWL();\n    \n    // Listen for auto-save events\n    const handleAutoSave = (event: CustomEvent) => {\n      if (event.detail.projectId === projectId) {\n        setLastAutoSave(event.detail.timestamp);\n        setIsAutoSaving(false);\n      }\n    };\n\n    window.addEventListener('dvre-cwl-saved', handleAutoSave as EventListener);\n    \n    return () => {\n      window.removeEventListener('dvre-cwl-saved', handleAutoSave as EventListener);\n      if (autoSaveTimeoutRef.current) {\n        clearTimeout(autoSaveTimeoutRef.current);\n      }\n    };\n  }, [projectId]);\n\n  // Set up auto-save when CWL changes\n  useEffect(() => {\n    if (cwlWorkflow && !readOnly) {\n      // Clear existing timeout\n      if (autoSaveTimeoutRef.current) {\n        clearTimeout(autoSaveTimeoutRef.current);\n      }\n\n      // Set new timeout for auto-save\n      autoSaveTimeoutRef.current = setTimeout(() => {\n        setIsAutoSaving(true);\n        cwlManager.autoSave(projectId, cwlWorkflow);\n      }, 2000) as any; // Auto-save after 2 seconds of inactivity\n    }\n  }, [cwlWorkflow, projectId, readOnly]);\n\n  const loadOrCreateCWL = useCallback(() => {\n    try {\n      const existingCWL = cwlManager.loadCWL(projectId);\n      if (existingCWL) {\n        setCwlWorkflow(existingCWL.cwl);\n        setMetadata(existingCWL.metadata);\n        setDeploymentStatus(existingCWL.metadata.status);\n        setWorkflowId(existingCWL.metadata.workflowId || null);\n        \n        // Load AL config if available\n        if (existingCWL.metadata.alConfig) {\n          setAlConfig(existingCWL.metadata.alConfig);\n        }\n      } else {\n        // Create new CWL from template\n        createFromTemplate();\n      }\n    } catch (error: any) {\n      if (error.message.includes('Access denied')) {\n        setReadOnly(true);\n        // Try to load read-only version\n        const storage = JSON.parse(localStorage.getItem('dvre-project-cwls') || '{}');\n        const cwlData = storage[projectId];\n        if (cwlData) {\n          setCwlWorkflow(cwlData.cwl);\n          setMetadata(cwlData.metadata);\n          setDeploymentStatus(cwlData.metadata.status);\n        }\n      }\n    }\n  }, [projectId]);\n\n  const createFromTemplate = useCallback(() => {\n    const template = cwlManager.createALTemplate(projectId, projectTitle, alConfig);\n    setCwlWorkflow(template);\n    setDeploymentStatus('draft');\n    \n    // Save initial template\n    cwlManager.saveCWL(projectId, template, {\n      projectTitle: projectTitle,\n      alConfig: alConfig\n    });\n  }, [projectId, projectTitle, alConfig]);\n\n  const updateALConfiguration = useCallback((newConfig: ALConfiguration) => {\n    setAlConfig(newConfig);\n    \n    if (cwlWorkflow && !readOnly) {\n      cwlManager.updateALConfiguration(projectId, newConfig);\n      \n      // Update local CWL with new configuration\n      const updatedCWL = { ...cwlWorkflow };\n      updatedCWL.inputs.query_strategy.default = newConfig.queryStrategy;\n      updatedCWL.inputs.model_config.default = JSON.stringify(newConfig.modelConfig);\n      updatedCWL.inputs.labeling_budget.default = newConfig.labelingBudget;\n      updatedCWL.inputs.max_iterations.default = newConfig.maxIterations;\n      \n      setCwlWorkflow(updatedCWL);\n    }\n  }, [cwlWorkflow, projectId, readOnly]);\n\n  const deployWorkflow = useCallback(async () => {\n    if (!cwlWorkflow || !userWallet) {\n      setDeploymentError('User authentication required for workflow deployment');\n      return;\n    }\n\n    try {\n      setIsDeploying(true);\n      setDeploymentError(null);\n\n      // Finalize CWL locally\n      const success = cwlManager.finalizeCWL(projectId);\n      if (!success) throw new Error('Failed to finalize CWL');\n\n      // Create authenticated submission data with user context\n      const submissionData = orchestrationAPI.createAuthenticatedSubmission(\n        projectId,\n        projectTitle,\n        cwlWorkflow,\n        alConfig,\n        userWallet,\n        projectData || {}, // Use project data for role determination\n        {} // additional inputs\n      );\n\n      // Submit to orchestration server\n      const response = await orchestrationAPI.submitProjectWorkflow(submissionData);\n\n      // Update local status\n      cwlManager.markAsDeployed(projectId, response.workflow_id);\n\n      setDeploymentStatus('deployed');\n      setWorkflowId(response.workflow_id);\n\n      if (onWorkflowDeployed) {\n        onWorkflowDeployed(response.workflow_id);\n      }\n\n    } catch (error: any) {\n      console.error('Deployment failed:', error);\n      setDeploymentError(error.message);\n    } finally {\n      setIsDeploying(false);\n    }\n  }, [cwlWorkflow, projectId, projectTitle, alConfig, userWallet, projectData, onWorkflowDeployed]);\n\n  if (readOnly) {\n    return (\n      <div className=\"cwl-workflow-editor read-only\">\n        <div className=\"editor-header\">\n          <h2>CWL Workflow - Read Only</h2>\n          <p>Only the project creator can edit the CWL workflow</p>\n          {onClose && (\n            <button onClick={onClose} className=\"close-button\">Close</button>\n          )}\n        </div>\n        \n        {cwlWorkflow && (\n          <CWLCodeEditor\n            cwl={cwlWorkflow}\n            onChange={() => {}} // No-op for read-only\n            disabled={true}\n          />\n        )}\n      </div>\n    );\n  }\n\n  const canDeploy = cwlWorkflow && cwlManager.validateCWL(cwlWorkflow) && deploymentStatus !== 'deployed';\n\n  return (\n    <div className=\"cwl-workflow-editor\">\n      <div className=\"editor-header\">\n        <h2>CWL Workflow Editor - {projectTitle}</h2>\n        <AutoSaveIndicator lastSaved={lastAutoSave} isAutoSaving={isAutoSaving} />\n        {onClose && (\n          <button onClick={onClose} className=\"close-button\">Close</button>\n        )}\n      </div>\n\n      <div className=\"editor-content\">\n        <div className=\"left-panel\">\n          <ALConfigurationPanel\n            config={alConfig}\n            onChange={updateALConfiguration}\n            disabled={deploymentStatus === 'deployed'}\n          />\n          \n          {userWallet && projectData && (\n            <ContributorManager\n              projectId={projectId}\n              userWallet={userWallet}\n              userRole={orchestrationAPI['getUserRole'] ? orchestrationAPI['getUserRole'](userWallet, projectData) : 'contributor'}\n              projectData={projectData}\n              onContributorsChange={(contributors) => {\n                console.log('Contributors updated:', contributors);\n                // Optionally update AL config with contributor list\n                const contributorWallets = contributors\n                  .filter(c => c.status === 'active' && c.wallet !== 'pending')\n                  .map(c => c.wallet);\n                if (contributorWallets.length > 0) {\n                  updateALConfiguration({\n                    ...alConfig,\n                    contributors: contributorWallets\n                  });\n                }\n              }}\n            />\n          )}\n          \n          {cwlWorkflow && (\n            <WorkflowValidationPanel cwl={cwlWorkflow} />\n          )}\n        </div>\n\n        <div className=\"right-panel\">\n          {cwlWorkflow && (\n            <CWLCodeEditor\n              cwl={cwlWorkflow}\n              onChange={setCwlWorkflow}\n              disabled={deploymentStatus === 'deployed'}\n            />\n          )}\n          \n          <DeploymentPanel\n            onDeploy={deployWorkflow}\n            status={deploymentStatus}\n            workflowId={workflowId}\n            canDeploy={!!canDeploy}\n            isDeploying={isDeploying}\n            error={deploymentError}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}; ","import React, { useState, useEffect, useCallback } from 'react';\nimport { orchestrationAPI } from './OrchestrationAPI';\n\ninterface Contributor {\n  wallet: string;\n  name?: string;\n  email?: string;\n  status: 'invited' | 'accepted' | 'active' | 'inactive';\n  invitedAt: string;\n  acceptedAt?: string;\n  lastActivity?: string;\n  samplesAssigned: number;\n  labelsSubmitted: number;\n  accuracyScore: number;\n}\n\ninterface Invitation {\n  id: string;\n  projectId: string;\n  contributorWallet: string;\n  contributorEmail?: string;\n  invitedBy: string;\n  status: 'pending' | 'accepted' | 'declined' | 'expired';\n  createdAt: string;\n  expiresAt: string;\n  message?: string;\n}\n\ninterface ContributorManagerProps {\n  projectId: string;\n  userWallet: string;\n  userRole: 'coordinator' | 'contributor' | 'observer';\n  projectData: any;\n  onContributorsChange?: (contributors: Contributor[]) => void;\n}\n\nexport const ContributorManager: React.FC<ContributorManagerProps> = ({\n  projectId,\n  userWallet,\n  userRole,\n  projectData,\n  onContributorsChange\n}) => {\n  const [contributors, setContributors] = useState<Contributor[]>([]);\n  const [invitations, setInvitations] = useState<Invitation[]>([]);\n  const [showInviteModal, setShowInviteModal] = useState(false);\n  const [newInviteEmail, setNewInviteEmail] = useState('');\n  const [newInviteWallet, setNewInviteWallet] = useState('');\n  const [newInviteMessage, setNewInviteMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Load existing contributors from project data\n  useEffect(() => {\n    if (projectData?.participants) {\n      const existingContributors: Contributor[] = projectData.participants.map((p: any) => ({\n        wallet: p.address || p.wallet,\n        name: p.name,\n        email: p.email,\n        status: 'active',\n        invitedAt: p.joinedAt || new Date().toISOString(),\n        acceptedAt: p.joinedAt || new Date().toISOString(),\n        samplesAssigned: 0,\n        labelsSubmitted: 0,\n        accuracyScore: 0\n      }));\n      setContributors(existingContributors);\n    }\n  }, [projectData]);\n\n  // Load invitations and contributor stats from orchestration server\n  const loadContributorData = useCallback(async () => {\n    if (userRole !== 'coordinator') return;\n\n    try {\n      setLoading(true);\n      \n      // Get session stats to update contributor performance\n      const sessionStats = await orchestrationAPI.getMultiUserSessionStats(projectId, userWallet, projectData);\n      \n      if (sessionStats.contributors) {\n        setContributors(prev => prev.map(contributor => {\n          const stats = sessionStats.contributors.find((c: any) => \n            c.wallet.toLowerCase() === contributor.wallet.toLowerCase()\n          );\n          \n          if (stats) {\n            return {\n              ...contributor,\n              samplesAssigned: stats.samples_assigned || 0,\n              labelsSubmitted: stats.labels_submitted || 0,\n              accuracyScore: stats.accuracy_score || 0,\n              lastActivity: stats.last_submission,\n              status: stats.status === 'active' ? 'active' : 'inactive'\n            };\n          }\n          return contributor;\n        }));\n      }\n    } catch (error) {\n      console.warn('Failed to load contributor stats:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [projectId, userWallet, userRole, projectData]);\n\n  useEffect(() => {\n    loadContributorData();\n  }, [loadContributorData]);\n\n  // Send invitation\n  const sendInvitation = useCallback(async () => {\n    if (!newInviteWallet && !newInviteEmail) {\n      setError('Please provide either a wallet address or email');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Create invitation\n      const invitation: Invitation = {\n        id: `invite-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        projectId,\n        contributorWallet: newInviteWallet,\n        contributorEmail: newInviteEmail,\n        invitedBy: userWallet,\n        status: 'pending',\n        createdAt: new Date().toISOString(),\n        expiresAt: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(), // 7 days\n        message: newInviteMessage\n      };\n\n      // Store invitation locally (in real implementation, send to server)\n      const storedInvitations = JSON.parse(localStorage.getItem('dvre-dal-invitations') || '[]');\n      storedInvitations.push(invitation);\n      localStorage.setItem('dvre-dal-invitations', JSON.stringify(storedInvitations));\n\n      setInvitations(prev => [...prev, invitation]);\n\n      // Add as pending contributor\n      const newContributor: Contributor = {\n        wallet: newInviteWallet || 'pending',\n        email: newInviteEmail,\n        status: 'invited',\n        invitedAt: new Date().toISOString(),\n        samplesAssigned: 0,\n        labelsSubmitted: 0,\n        accuracyScore: 0\n      };\n\n      setContributors(prev => [...prev, newContributor]);\n\n      // Clear form\n      setNewInviteEmail('');\n      setNewInviteWallet('');\n      setNewInviteMessage('');\n      setShowInviteModal(false);\n\n      // Notify parent component\n      if (onContributorsChange) {\n        onContributorsChange([...contributors, newContributor]);\n      }\n\n      // TODO: In real implementation, call orchestration server to send invitation\n      // await orchestrationAPI.sendContributorInvitation(invitation);\n\n    } catch (error: any) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [newInviteWallet, newInviteEmail, newInviteMessage, projectId, userWallet, contributors, onContributorsChange]);\n\n  // Remove contributor\n  const removeContributor = useCallback(async (contributorWallet: string) => {\n    if (userRole !== 'coordinator') return;\n\n    try {\n      setLoading(true);\n      \n      // Remove from local state\n      setContributors(prev => prev.filter(c => c.wallet !== contributorWallet));\n\n      // TODO: Call orchestration server to remove contributor from project\n      // await orchestrationAPI.removeContributor(projectId, contributorWallet, userWallet, projectData);\n\n      // Notify parent component\n      if (onContributorsChange) {\n        onContributorsChange(contributors.filter(c => c.wallet !== contributorWallet));\n      }\n\n    } catch (error: any) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [userRole, projectId, userWallet, projectData, contributors, onContributorsChange]);\n\n  if (userRole === 'observer') {\n    return null; // Observers cannot see contributor management\n  }\n\n  return (\n    <div className=\"contributor-manager\">\n      <div className=\"contributor-header\">\n        <h3>Project Contributors</h3>\n        {userRole === 'coordinator' && (\n          <button\n            onClick={() => setShowInviteModal(true)}\n            className=\"invite-button\"\n            disabled={loading}\n          >\n            Invite Contributor\n          </button>\n        )}\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          {error}\n          <button onClick={() => setError(null)}>×</button>\n        </div>\n      )}\n\n      <div className=\"contributors-list\">\n        {contributors.length === 0 ? (\n          <div className=\"empty-state\">\n            <p>No contributors yet</p>\n            {userRole === 'coordinator' && (\n              <p>Invite contributors to start collaborative Active Learning</p>\n            )}\n          </div>\n        ) : (\n          contributors.map((contributor, index) => (\n            <div key={contributor.wallet || index} className=\"contributor-item\">\n              <div className=\"contributor-info\">\n                <div className=\"contributor-identity\">\n                  <strong>{contributor.name || contributor.email || 'Anonymous'}</strong>\n                  <span className={`status-badge ${contributor.status}`}>\n                    {contributor.status}\n                  </span>\n                </div>\n                <div className=\"contributor-details\">\n                  <div>Wallet: {contributor.wallet === 'pending' ? 'Pending acceptance' : `${contributor.wallet.slice(0, 6)}...${contributor.wallet.slice(-4)}`}</div>\n                  {contributor.email && <div>Email: {contributor.email}</div>}\n                  <div>Invited: {new Date(contributor.invitedAt).toLocaleDateString()}</div>\n                  {contributor.lastActivity && (\n                    <div>Last Activity: {new Date(contributor.lastActivity).toLocaleDateString()}</div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"contributor-stats\">\n                <div className=\"stat\">\n                  <span className=\"stat-value\">{contributor.samplesAssigned}</span>\n                  <span className=\"stat-label\">Samples Assigned</span>\n                </div>\n                <div className=\"stat\">\n                  <span className=\"stat-value\">{contributor.labelsSubmitted}</span>\n                  <span className=\"stat-label\">Labels Submitted</span>\n                </div>\n                <div className=\"stat\">\n                  <span className=\"stat-value\">{(contributor.accuracyScore * 100).toFixed(1)}%</span>\n                  <span className=\"stat-label\">Accuracy</span>\n                </div>\n              </div>\n\n              {userRole === 'coordinator' && contributor.status !== 'invited' && (\n                <div className=\"contributor-actions\">\n                  <button\n                    onClick={() => removeContributor(contributor.wallet)}\n                    className=\"remove-button\"\n                    disabled={loading}\n                  >\n                    Remove\n                  </button>\n                </div>\n              )}\n            </div>\n          ))\n        )}\n      </div>\n\n      {/* Invitation Modal */}\n      {showInviteModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal\">\n            <div className=\"modal-header\">\n              <h3>Invite Contributor</h3>\n              <button\n                onClick={() => setShowInviteModal(false)}\n                className=\"close-button\"\n              >\n                ×\n              </button>\n            </div>\n\n            <div className=\"modal-content\">\n              <div className=\"form-group\">\n                <label htmlFor=\"invite-email\">Email Address (optional):</label>\n                <input\n                  id=\"invite-email\"\n                  type=\"email\"\n                  value={newInviteEmail}\n                  onChange={(e) => setNewInviteEmail(e.target.value)}\n                  placeholder=\"contributor@example.com\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"invite-wallet\">Wallet Address (optional):</label>\n                <input\n                  id=\"invite-wallet\"\n                  type=\"text\"\n                  value={newInviteWallet}\n                  onChange={(e) => setNewInviteWallet(e.target.value)}\n                  placeholder=\"0x...\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"invite-message\">Invitation Message (optional):</label>\n                <textarea\n                  id=\"invite-message\"\n                  value={newInviteMessage}\n                  onChange={(e) => setNewInviteMessage(e.target.value)}\n                  placeholder=\"Join our Active Learning project...\"\n                  rows={3}\n                />\n              </div>\n            </div>\n\n            <div className=\"modal-actions\">\n              <button\n                onClick={() => setShowInviteModal(false)}\n                className=\"cancel-button\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={sendInvitation}\n                className=\"send-button\"\n                disabled={loading || (!newInviteEmail && !newInviteWallet)}\n              >\n                {loading ? 'Sending...' : 'Send Invitation'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}; ","import React, { useState, useCallback, useEffect } from 'react';\nimport { CWLWorkflowEditor } from './CWLWorkflowEditor';\nimport { RuntimeOrchestrationPanel } from './RuntimeOrchestrationPanel';\nimport { cwlManager } from './CWLManager';\nimport { orchestrationAPI } from './OrchestrationAPI';\nimport { useDVREAuth, useActiveLearningProjects } from './integration/DVREIntegration';\n// COMMENTED OUT RO-CRATE: import { dvreROCrateClient, DALROCrate } from './DVREROCrateClient';\n// COMMENTED OUT RO-CRATE: import { ProjectSetupWizard } from './ProjectSetupWizardSimple';\n\ninterface DALProject {\n  id: string;\n  name: string;\n  contractAddress: string;\n  status: 'active' | 'training' | 'completed';\n  participants: number;\n  accuracy: number;\n  currentRound: number;\n  totalRounds: number;\n  lastUpdated: Date;\n  cwlStatus?: string;\n  workflowId?: string;\n  phase?: 'configuration' | 'runtime' | 'completed';\n  // COMMENTED OUT RO-CRATE: dalROCrate?: DALROCrate; // Add RO-Crate data\n}\n\ninterface DALComponentProps {\n  title?: string;\n}\n\nconst DALComponent: React.FC<DALComponentProps> = ({ \n  title = 'Decentralized Active Learning' \n}) => {\n  // Use DVRE integration for authentication\n  const { account, isLoading: authLoading, error: authError, connect } = useDVREAuth();\n  \n  // Use the integration to get Active Learning projects from DVRE's userProjects\n  const { projects: alProjects, loading: projectsLoading, error: projectsError } = useActiveLearningProjects(account);\n  \n  const [selectedProject, setSelectedProject] = useState<DALProject | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [showCWLEditor, setShowCWLEditor] = useState(false);\n  const [showRuntimePanel, setShowRuntimePanel] = useState(false);\n  // COMMENTED OUT RO-CRATE: const [showSetupWizard, setShowSetupWizard] = useState(false);\n  const [serverHealthy, setServerHealthy] = useState(false);\n  // COMMENTED OUT RO-CRATE: const [roCrateData, setROCrateData] = useState<Record<string, DALROCrate>>({});\n  // COMMENTED OUT RO-CRATE: const [loadingROCrates, setLoadingROCrates] = useState(false);\n\n  console.log('DAL: Component rendering, auth state:', { account, authLoading, authError });\n  console.log('DAL: AL projects from DVRE userProjects:', alProjects?.length || 0);\n\n  // COMMENTED OUT RO-CRATE: Load RO-Crate data for all AL projects\n  const loadROCrateData = useCallback(async () => {\n    if (!alProjects || alProjects.length === 0) return;\n\n    // setLoadingROCrates(true); // COMMENTED OUT RO-CRATE\n    try {\n      // const roCrateMap: Record<string, DALROCrate> = {}; // COMMENTED OUT RO-CRATE\n      \n      for (const project of alProjects) {\n        try {\n          // Try to get existing DAL RO-Crate, or create default if none exists\n          // let dalROCrate = await dvreROCrateClient.getDALROCrate(project.address); // COMMENTED OUT RO-CRATE\n          \n          // if (!dalROCrate) { // COMMENTED OUT RO-CRATE\n          //   // Initialize default DAL configuration for new projects // COMMENTED OUT RO-CRATE\n          //   console.log(`DAL: Initializing RO-Crate for project ${project.address}`); // COMMENTED OUT RO-CRATE\n          //   dalROCrate = await dvreROCrateClient.updateDALConfiguration(project.address, { // COMMENTED OUT RO-CRATE\n          //     queryStrategy: 'uncertainty_sampling', // COMMENTED OUT RO-CRATE\n          //     labelingBudget: 100, // COMMENTED OUT RO-CRATE\n          //     maxIterations: 10, // COMMENTED OUT RO-CRATE\n          //     modelConfig: { // COMMENTED OUT RO-CRATE\n          //       model_type: 'logistic_regression', // COMMENTED OUT RO-CRATE\n          //       parameters: {} // COMMENTED OUT RO-CRATE\n          //     }, // COMMENTED OUT RO-CRATE\n          //     dataConfig: { // COMMENTED OUT RO-CRATE\n          //       trainingDataset: '', // COMMENTED OUT RO-CRATE\n          //       features: [] // COMMENTED OUT RO-CRATE\n          //     } // COMMENTED OUT RO-CRATE\n          //   }); // COMMENTED OUT RO-CRATE\n          // } // COMMENTED OUT RO-CRATE\n          \n          // if (dalROCrate) { // COMMENTED OUT RO-CRATE\n          //   roCrateMap[project.address] = dalROCrate; // COMMENTED OUT RO-CRATE\n          // } // COMMENTED OUT RO-CRATE\n        } catch (error) {\n          console.warn(`DAL: Failed to load RO-Crate for project ${project.address}:`, error);\n        }\n      }\n      \n      // setROCrateData(roCrateMap); // COMMENTED OUT RO-CRATE\n    } catch (error) {\n      console.error('DAL: Failed to load RO-Crate data:', error);\n      setError('Failed to load project configurations');\n    } finally {\n      // setLoadingROCrates(false); // COMMENTED OUT RO-CRATE\n    }\n  }, [alProjects]);\n\n  // COMMENTED OUT RO-CRATE: Load RO-Crate data when AL projects change\n  useEffect(() => {\n    // loadROCrateData(); // COMMENTED OUT RO-CRATE\n  }, [loadROCrateData]);\n\n  // Convert DVRE projects to DAL project format with RO-Crate data\n  const dalProjects: DALProject[] = alProjects.map(project => {\n    // const dalROCrate = roCrateData[project.address]; // COMMENTED OUT RO-CRATE\n    \n    return {\n      id: project.address,\n      name: project.objective || 'Unnamed AL Project',\n      contractAddress: project.address,\n      status: project.isActive ? 'active' : 'completed',\n      participants: project.memberCount || 1,\n      accuracy: project.projectData?.accuracy || 0,\n      currentRound: project.projectData?.currentRound || 0,\n      totalRounds: project.projectData?.maxRounds || 10,\n      lastUpdated: new Date(project.lastModified * 1000),\n      cwlStatus: cwlManager.getStatus(project.address),\n      phase: 'configuration',\n      // dalROCrate: dalROCrate // COMMENTED OUT RO-CRATE Add RO-Crate data to the project\n    };\n  });\n\n  // Simplified server health check\n  const checkServerHealth = useCallback(async () => {\n    try {\n      const healthy = await orchestrationAPI.checkServerHealth();\n      setServerHealthy(healthy);\n    } catch (error) {\n      setServerHealthy(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    console.log('DAL: Effect running, account:', account);\n    if (account) {\n      checkServerHealth();\n    }\n  }, [account, checkServerHealth]);\n\n  // Handle project selection\n  const handleProjectSelect = (project: DALProject) => {\n    setSelectedProject(project);\n  };\n\n  // Handle project setup\n  const handleSetupProject = (project: DALProject) => {\n    setSelectedProject(project);\n    // setShowSetupWizard(true); // COMMENTED OUT RO-CRATE\n  };\n\n  // Handle CWL configuration\n  const handleConfigureCWL = (project: DALProject) => {\n    setSelectedProject(project);\n    setShowCWLEditor(true);\n  };\n\n  // Handle runtime orchestration\n  const handleShowRuntime = (project: DALProject) => {\n    setSelectedProject(project);\n    setShowRuntimePanel(true);\n  };\n\n  // Handle back to main view\n  const handleBackToMain = () => {\n    setSelectedProject(null);\n    setShowCWLEditor(false);\n    setShowRuntimePanel(false);\n    // setShowSetupWizard(false); // COMMENTED OUT RO-CRATE\n  };\n\n  // Handle wizard completion\n  const handleWizardComplete = (roCrate: any) => { // COMMENTED OUT RO-CRATE\n    console.log('DAL: Project setup completed:', roCrate);\n    // setShowSetupWizard(false); // COMMENTED OUT RO-CRATE\n    // Refresh RO-Crate data\n    // loadROCrateData(); // COMMENTED OUT RO-CRATE\n  };\n\n  // Handle workflow deployment success\n  const handleWorkflowDeployed = (workflowId: string) => {\n    console.log('DAL: Workflow deployed successfully:', workflowId);\n    // Optionally update project status or refresh data\n    setShowCWLEditor(false);\n    setShowRuntimePanel(true);\n  };\n\n  // Loading state\n  if (authLoading) {\n    console.log('DAL: Rendering loading state');\n    return (\n      <div style={{ \n        padding: '20px', \n        fontFamily: 'var(--jp-ui-font-family)',\n        background: 'var(--jp-layout-color1)',\n        minHeight: '400px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column'\n      }}>\n        <div style={{ marginBottom: '10px' }}>Loading authentication...</div>\n        <div style={{ fontSize: '12px', color: 'gray' }}>DAL Extension v0.1.0</div>\n      </div>\n    );\n  }\n\n  // Authentication required\n  if (!account) {\n    console.log('DAL: Rendering auth required state');\n    return (\n      <div style={{ \n        padding: '20px', \n        fontFamily: 'var(--jp-ui-font-family)',\n        background: 'var(--jp-layout-color1)',\n        minHeight: '400px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      }}>\n        <div style={{\n          background: 'var(--jp-warn-color3)',\n          border: '1px solid var(--jp-warn-color1)',\n          borderRadius: '4px',\n          padding: '20px',\n          textAlign: 'center',\n          maxWidth: '400px'\n        }}>\n          <h3 style={{ color: 'var(--jp-warn-color1)', margin: '0 0 10px 0' }}>\n            Authentication Required\n          </h3>\n          <p style={{ color: 'var(--jp-ui-font-color1)', margin: '0 0 15px 0' }}>\n            Please connect your wallet to access Decentralized Active Learning projects.\n          </p>\n          {authError && (\n            <p style={{ color: 'var(--jp-error-color1)', fontSize: '12px', margin: '0 0 15px 0' }}>\n              Error: {authError}\n            </p>\n          )}\n          <button\n            onClick={connect}\n            style={{\n              padding: '10px 20px',\n              background: 'var(--jp-brand-color1)',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '14px'\n            }}\n          >\n            Connect Wallet\n          </button>\n          <div style={{ fontSize: '12px', color: 'gray', marginTop: '10px' }}>\n            DAL Extension v0.1.0\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Show CWL Editor\n  if (showCWLEditor && selectedProject) {\n    // Find the corresponding DVRE project data for authentication\n    const correspondingProject = alProjects.find(p => p.address === selectedProject.contractAddress);\n    \n    return (\n      <div style={{ \n        fontFamily: 'var(--jp-ui-font-family)',\n        background: 'var(--jp-layout-color1)',\n        minHeight: '400px'\n      }}>\n        <CWLWorkflowEditor\n          projectId={selectedProject.contractAddress}\n          projectTitle={selectedProject.name}\n          userWallet={account}\n          projectData={correspondingProject}\n          onClose={handleBackToMain}\n          onWorkflowDeployed={handleWorkflowDeployed}\n        />\n      </div>\n    );\n  }\n\n  // Show Runtime Panel\n  if (showRuntimePanel && selectedProject) {\n    return (\n      <div style={{ \n        fontFamily: 'var(--jp-ui-font-family)',\n        background: 'var(--jp-layout-color1)',\n        minHeight: '400px'\n      }}>\n        <RuntimeOrchestrationPanel\n          projectId={selectedProject.contractAddress}\n          projectTitle={selectedProject.name}\n          workflowId={selectedProject.workflowId}\n          onClose={handleBackToMain}\n        />\n      </div>\n    );\n  }\n\n  // Show Setup Wizard\n  if (false && selectedProject) { // COMMENTED OUT RO-CRATE\n    return (\n      <div style={{ \n        fontFamily: 'var(--jp-ui-font-family)',\n        background: 'var(--jp-layout-color1)',\n        minHeight: '400px'\n      }}>\n        {/* COMMENTED OUT RO-CRATE\n        <ProjectSetupWizard\n          projectId={selectedProject.contractAddress}\n          projectData={{ address: selectedProject.contractAddress, objective: selectedProject.name }}\n          userWallet={account}\n          onComplete={handleWizardComplete}\n          onCancel={handleBackToMain}\n        />\n        */}\n      </div>\n    );\n  }\n\n  console.log('DAL: Rendering main interface');\n\n  // Main interface\n  return (\n    <div style={{ \n      padding: '20px', \n      fontFamily: 'var(--jp-ui-font-family)',\n      background: 'var(--jp-layout-color1)',\n      minHeight: '400px'\n    }}>\n      <div style={{ marginBottom: '20px' }}>\n        <h1>{title}</h1>\n        <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\n          <div style={{ \n            padding: '4px 8px', \n            background: 'var(--jp-success-color3)', \n            borderRadius: '4px',\n            fontSize: '12px'\n          }}>\n            Connected: {account.slice(0, 6)}...{account.slice(-4)}\n          </div>\n          <div style={{ \n            padding: '4px 8px', \n            background: serverHealthy ? 'var(--jp-success-color3)' : 'var(--jp-warn-color3)', \n            borderRadius: '4px',\n            fontSize: '12px'\n          }}>\n            Server: {serverHealthy ? 'Online' : 'Offline'}\n          </div>\n        </div>\n      </div>\n\n      {(error || projectsError) && (\n        <div style={{\n          background: 'var(--jp-error-color3)',\n          border: '1px solid var(--jp-error-color1)',\n          borderRadius: '4px',\n          padding: '10px',\n          marginBottom: '20px',\n          color: 'var(--jp-error-color1)'\n        }}>\n          {error || projectsError}\n        </div>\n      )}\n\n      <div style={{ marginBottom: '30px' }}>\n        <h2>Active Learning Projects</h2>\n        {projectsLoading ? (\n          <div>Loading projects...</div>\n        ) : dalProjects.length === 0 ? (\n          <div style={{\n            background: 'var(--jp-layout-color2)',\n            border: '1px solid var(--jp-border-color1)',\n            borderRadius: '4px',\n            padding: '20px',\n            textAlign: 'center'\n          }}>\n            <p>No Active Learning projects found.</p>\n            <p style={{ fontSize: '14px', color: 'var(--jp-ui-font-color2)' }}>\n              Create an Active Learning project using the Project Collaboration extension to see it here.\n            </p>\n          </div>\n        ) : (\n          <div>\n            {dalProjects.map(project => (\n              <div key={project.id} style={{\n                background: 'var(--jp-layout-color2)',\n                border: '1px solid var(--jp-border-color1)',\n                borderRadius: '4px',\n                padding: '15px',\n                marginBottom: '10px'\n              }}>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\n                  <div style={{ flex: 1 }}>\n                    <h3 style={{ margin: '0 0 10px 0' }}>{project.name}</h3>\n                    <div style={{ fontSize: '14px', color: 'var(--jp-ui-font-color2)', marginBottom: '10px' }}>\n                      <div>Status: {project.status}</div>\n                      <div>Participants: {project.participants}</div>\n                      <div>Contract: {project.contractAddress}</div>\n                      <div>CWL Status: {project.cwlStatus || 'Not configured'}</div>\n                      <div>Last Updated: {project.lastUpdated.toLocaleDateString()}</div>\n                    </div>\n                  </div>\n                  <div style={{ display: 'flex', flexDirection: 'column', gap: '8px', marginLeft: '20px' }}>\n                    <button\n                      onClick={() => handleConfigureCWL(project)}\n                      style={{\n                        padding: '8px 16px',\n                        background: 'var(--jp-brand-color1)',\n                        color: 'white',\n                        border: 'none',\n                        borderRadius: '4px',\n                        cursor: 'pointer',\n                        fontSize: '12px',\n                        whiteSpace: 'nowrap'\n                      }}\n                    >\n                      Configure Workflow\n                    </button>\n                    <button\n                      onClick={() => handleShowRuntime(project)}\n                      disabled={project.cwlStatus !== 'deployed'}\n                      style={{\n                        padding: '8px 16px',\n                        background: project.cwlStatus === 'deployed' ? 'var(--jp-success-color1)' : 'var(--jp-layout-color3)',\n                        color: project.cwlStatus === 'deployed' ? 'white' : 'var(--jp-ui-font-color3)',\n                        border: 'none',\n                        borderRadius: '4px',\n                        cursor: project.cwlStatus === 'deployed' ? 'pointer' : 'not-allowed',\n                        fontSize: '12px',\n                        whiteSpace: 'nowrap'\n                      }}\n                    >\n                      Run Workflow\n                    </button>\n                    <button\n                      onClick={() => handleSetupProject(project)}\n                      style={{\n                        padding: '8px 16px',\n                        background: 'var(--jp-info-color1)',\n                        color: 'white',\n                        border: 'none',\n                        borderRadius: '4px',\n                        cursor: 'pointer',\n                        fontSize: '12px',\n                        whiteSpace: 'nowrap'\n                      }}\n                    >\n                      Setup Project\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <div>\n        <h2>Getting Started</h2>\n        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', gap: '20px' }}>\n          <div style={{\n            background: 'var(--jp-layout-color2)',\n            border: '1px solid var(--jp-border-color1)',\n            borderRadius: '4px',\n            padding: '20px'\n          }}>\n            <h3>1. Create or Join Projects</h3>\n            <p>To create a new Active Learning project or join an existing one, use the Project Collaboration extension.</p>\n            <div style={{ fontSize: '12px', color: 'var(--jp-ui-font-color2)', marginTop: '10px' }}>\n              Projects will appear above once they're created with the \"Active Learning\" template.\n            </div>\n          </div>\n          \n          <div style={{\n            background: 'var(--jp-layout-color2)',\n            border: '1px solid var(--jp-border-color1)',\n            borderRadius: '4px',\n            padding: '20px'\n          }}>\n            <h3>2. Configure Workflows</h3>\n            <p>Define your Active Learning workflow using CWL (Common Workflow Language) including dataset preparation, model training, and query strategies.</p>\n            <div style={{ fontSize: '12px', color: 'var(--jp-ui-font-color2)', marginTop: '10px' }}>\n              Use the \"Configure Workflow\" button for each project.\n            </div>\n          </div>\n          \n          <div style={{\n            background: 'var(--jp-layout-color2)',\n            border: '1px solid var(--jp-border-color1)',\n            borderRadius: '4px',\n            padding: '20px'\n          }}>\n            <h3>3. Run Active Learning</h3>\n            <p>Execute your configured workflows to start the Active Learning process with automated query selection, labeling, and model updates.</p>\n            <div style={{ fontSize: '12px', color: 'var(--jp-ui-font-color2)', marginTop: '10px' }}>\n              Available after workflow configuration is complete.\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DALComponent; ","import { ReactWidget } from '@jupyterlab/ui-components';\nimport React from 'react';\nimport DALComponent from './DALComponent';\n\nexport class DALWidget extends ReactWidget {\n  private _title: string;\n\n  constructor(title: string = 'Decentralized Active Learning') {\n    super();\n    this._title = title;\n    this.addClass('dvre-widget');\n    this.addClass('dvre-dal-widget');\n    this.title.label = title;\n    this.title.closable = true;\n  }\n\n  render(): JSX.Element {\n    return <DALComponent title={this._title} />;\n  }\n} ","/**\n * Orchestration API Client for DVRE DAL Extension\n * Handles communication with the DVRE Orchestration Server\n */\n\nimport { CWLWorkflow, ALConfiguration } from './CWLManager';\n\nexport interface WorkflowSubmissionData {\n  project_id: string;\n  cwl_workflow: string | CWLWorkflow;\n  inputs: Record<string, any>;\n  metadata: {\n    creator: string;\n    project_title: string;\n    al_config?: ALConfiguration;\n    contributors?: string[];\n    [key: string]: any;\n  };\n  // User authentication\n  user_wallet: string;\n  user_role: 'coordinator' | 'contributor' | 'observer';\n  contract_address: string;\n}\n\nexport interface WorkflowStatus {\n  workflow_id: string;\n  project_id?: string;\n  status: 'PENDING' | 'RUNNING' | 'COMPLETED' | 'FAILED';\n  created_at: string;\n  started_at?: string;\n  completed_at?: string;\n  output?: string;\n  error?: string;\n  metadata?: Record<string, any>;\n  // User tracking\n  submitted_by: string;\n  accessible_to: string[];\n}\n\nexport interface WorkflowListResponse {\n  workflows: WorkflowStatus[];\n  total_count?: number;\n}\n\nexport interface ProjectWorkflowsResponse {\n  project_id: string;\n  workflows: WorkflowStatus[];\n  total_count: number;\n}\n\n// Runtime orchestration interfaces for AL-engine communication\nexport interface ALEngineCommand {\n  command_type: 'start_querying' | 'continue_querying' | 'prompt_training' | 'submit_labels' | 'terminate_project';\n  project_id: string;\n  workflow_id: string;\n  parameters?: Record<string, any>;\n  timestamp: string;\n  // User authentication for commands\n  user_wallet: string;\n  user_role: 'coordinator' | 'contributor' | 'observer';\n  contract_address: string;\n}\n\nexport interface ALEngineResponse {\n  command_id: string;\n  status: 'accepted' | 'rejected' | 'completed' | 'failed';\n  message?: string;\n  data?: Record<string, any>;\n  timestamp: string;\n}\n\nexport interface QueryingSession {\n  session_id: string;\n  project_id: string;\n  workflow_id: string;\n  status: 'active' | 'waiting_for_labels' | 'training' | 'completed';\n  current_round: number;\n  total_rounds: number;\n  queried_samples: any[];\n  accuracy_metrics?: Record<string, number>;\n}\n\nexport class OrchestrationAPI {\n  private baseUrl: string;\n  private defaultTimeout: number = 30000; // 30 seconds\n  private developmentMode: boolean = false;\n\n  constructor(baseUrl: string = 'http://145.100.135.97:5004') {\n    this.baseUrl = baseUrl.replace(/\\/$/, ''); // Remove trailing slash\n  }\n\n  /**\n   * Enable development mode with mock responses\n   */\n  enableDevelopmentMode() {\n    this.developmentMode = true;\n    console.log('DAL: Orchestration API running in development mode with mock responses');\n  }\n\n  /**\n   * Determine user role based on DVRE project data\n   */\n  private getUserRole(userWallet: string, projectData: any): 'coordinator' | 'contributor' | 'observer' {\n    const userAddress = userWallet.toLowerCase();\n    \n    // Check if user is the project creator (coordinator)\n    if (projectData.creator && projectData.creator.toLowerCase() === userAddress) {\n      return 'coordinator';\n    }\n    \n    // Check if user is in participants list (contributor)\n    if (projectData.participants && Array.isArray(projectData.participants)) {\n      const isParticipant = projectData.participants.some(\n        (p: any) => p.address && p.address.toLowerCase() === userAddress\n      );\n      if (isParticipant) {\n        return 'contributor';\n      }\n    }\n    \n    // Check if user is a member (from DVRE integration)\n    if (projectData.isMember || projectData.isOwner) {\n      return projectData.isOwner ? 'coordinator' : 'contributor';\n    }\n    \n    // Default to observer\n    return 'observer';\n  }\n\n  /**\n   * Create authenticated workflow submission with user context\n   */\n  createAuthenticatedSubmission(\n    projectId: string,\n    projectTitle: string,\n    cwlWorkflow: CWLWorkflow,\n    alConfig: ALConfiguration,\n    userWallet: string,\n    projectData: any,\n    inputs: Record<string, any> = {}\n  ): WorkflowSubmissionData {\n    const userRole = this.getUserRole(userWallet, projectData);\n    \n    return {\n      project_id: projectId,\n      cwl_workflow: cwlWorkflow,\n      inputs: {\n        dataset: inputs.dataset || 'default_dataset.csv',\n        query_strategy: alConfig.queryStrategy,\n        model_config: JSON.stringify(alConfig.modelConfig),\n        labeling_budget: alConfig.labelingBudget,\n        max_iterations: alConfig.maxIterations,\n        validation_split: alConfig.validationSplit || 0.2,\n        ...inputs\n      },\n      metadata: {\n        creator: userWallet,\n        project_title: projectTitle,\n        al_config: alConfig,\n        contributors: alConfig.contributors,\n        // Phase 1 metadata\n        configuration_phase: 'finalized',\n        smart_contract_address: projectData.address || projectId,\n        ipfs_dataset_hash: inputs.ipfs_dataset_hash,\n        ipfs_model_hash: inputs.ipfs_model_hash,\n        // User context\n        submitted_by: userWallet,\n        user_role: userRole,\n        project_creator: projectData.creator,\n        project_participants: projectData.participants || []\n      },\n      // User authentication\n      user_wallet: userWallet,\n      user_role: userRole,\n      contract_address: projectData.address || projectId\n    };\n  }\n\n  /**\n   * Create authenticated AL engine command with user context\n   */\n  createAuthenticatedCommand(\n    commandType: ALEngineCommand['command_type'],\n    projectId: string,\n    workflowId: string,\n    userWallet: string,\n    projectData: any,\n    parameters: Record<string, any> = {}\n  ): ALEngineCommand {\n    const userRole = this.getUserRole(userWallet, projectData);\n    \n    return {\n      command_type: commandType,\n      project_id: projectId,\n      workflow_id: workflowId,\n      parameters: parameters,\n      timestamp: new Date().toISOString(),\n      // User authentication\n      user_wallet: userWallet,\n      user_role: userRole,\n      contract_address: projectData.address || projectId\n    };\n  }\n\n  /**\n   * Submit a project workflow to the orchestration server (Phase 1)\n   */\n  async submitProjectWorkflow(data: WorkflowSubmissionData): Promise<{\n    workflow_id: string;\n    project_id: string;\n    status: string;\n    message: string;\n  }> {\n    if (this.developmentMode) {\n      // Mock response for development\n      const mockWorkflowId = `mock-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate network delay\n      return {\n        workflow_id: mockWorkflowId,\n        project_id: data.project_id,\n        status: 'SUBMITTED',\n        message: 'Workflow submitted successfully (development mode)'\n      };\n    }\n\n    try {\n      const response = await this.makeRequest('/streamflow/submit-project-workflow', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        if (response.status === 500) {\n          console.warn('DAL: Streamflow extension not available, enabling development mode');\n          this.enableDevelopmentMode();\n          return this.submitProjectWorkflow(data); // Retry with development mode\n        }\n        const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n        throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      if (error.message.includes('streamflow extension')) {\n        throw error; // Re-throw our custom error\n      }\n      console.warn('DAL: Server error, enabling development mode:', error.message);\n      this.enableDevelopmentMode();\n      return this.submitProjectWorkflow(data); // Retry with development mode\n    }\n  }\n\n  /**\n   * Submit a basic workflow (backward compatibility)\n   */\n  async submitWorkflow(cwlWorkflow: string, inputs: Record<string, any> = {}): Promise<{\n    workflow_id: string;\n    status: string;\n  }> {\n    const response = await this.makeRequest('/streamflow/submit', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        cwl_workflow: cwlWorkflow,\n        inputs: inputs\n      }),\n    });\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n      throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Get workflow status by ID\n   */\n  async getWorkflowStatus(workflowId: string): Promise<WorkflowStatus> {\n    if (this.developmentMode) {\n      // Mock workflow status for development\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      if (workflowId.startsWith('mock-')) {\n        return {\n          workflow_id: workflowId,\n          project_id: 'mock-project',\n          status: Math.random() > 0.5 ? 'COMPLETED' : 'RUNNING',\n          created_at: new Date(Date.now() - Math.random() * 3600000).toISOString(),\n          started_at: new Date(Date.now() - Math.random() * 1800000).toISOString(),\n          completed_at: Math.random() > 0.3 ? new Date().toISOString() : undefined,\n          output: 'Mock workflow execution completed successfully',\n          metadata: {\n            phase: 'configuration',\n            creator: 'development-user'\n          },\n          submitted_by: 'development-user',\n          accessible_to: ['development-user']\n        };\n      }\n    }\n\n    const response = await this.makeRequest(`/streamflow/status/${workflowId}`);\n\n    if (!response.ok) {\n      if (response.status === 404) {\n        throw new Error('Workflow not found');\n      }\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n      throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * List all workflows, optionally filtered by project\n   */\n  async listWorkflows(projectId?: string): Promise<WorkflowListResponse> {\n    const url = projectId \n      ? `/streamflow/workflows?project_id=${encodeURIComponent(projectId)}`\n      : '/streamflow/workflows';\n      \n    const response = await this.makeRequest(url);\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n      throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Get all workflows for a specific project\n   */\n  async getProjectWorkflows(projectId: string): Promise<ProjectWorkflowsResponse> {\n    const response = await this.makeRequest(`/streamflow/projects/${encodeURIComponent(projectId)}/workflows`);\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n      throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  // Phase 2: Runtime Orchestration Methods for AL-engine interaction\n\n  /**\n   * Start a new querying session (Phase 2)\n   */\n  async startQuerying(projectId: string, workflowId: string, parameters: {\n    query_count?: number;\n    strategy_override?: string;\n  } = {}): Promise<ALEngineResponse> {\n    const command: ALEngineCommand = {\n      command_type: 'start_querying',\n      project_id: projectId,\n      workflow_id: workflowId,\n      parameters: parameters,\n      timestamp: new Date().toISOString(),\n      // User authentication for commands\n      user_wallet: 'development-user', // Placeholder, replace with actual user\n      user_role: 'coordinator', // Placeholder, replace with actual user role\n      contract_address: '0x0000000000000000000000000000000000000000' // Placeholder, replace with actual contract address\n    };\n\n    const response = await this.makeRequest('/al-engine/command', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(command),\n    });\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n      throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Continue querying in an existing session\n   */\n  async continueQuerying(projectId: string, workflowId: string, sessionId: string): Promise<ALEngineResponse> {\n    const command: ALEngineCommand = {\n      command_type: 'continue_querying',\n      project_id: projectId,\n      workflow_id: workflowId,\n      parameters: { session_id: sessionId },\n      timestamp: new Date().toISOString(),\n      // User authentication for commands\n      user_wallet: 'development-user', // Placeholder, replace with actual user\n      user_role: 'coordinator', // Placeholder, replace with actual user role\n      contract_address: '0x0000000000000000000000000000000000000000' // Placeholder, replace with actual contract address\n    };\n\n    const response = await this.makeRequest('/al-engine/command', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(command),\n    });\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n      throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Prompt training with current labeled data\n   */\n  async promptTraining(projectId: string, workflowId: string, parameters: {\n    session_id: string;\n    training_config?: Record<string, any>;\n  }): Promise<ALEngineResponse> {\n    const command: ALEngineCommand = {\n      command_type: 'prompt_training',\n      project_id: projectId,\n      workflow_id: workflowId,\n      parameters: parameters,\n      timestamp: new Date().toISOString(),\n      // User authentication for commands\n      user_wallet: 'development-user', // Placeholder, replace with actual user\n      user_role: 'coordinator', // Placeholder, replace with actual user role\n      contract_address: '0x0000000000000000000000000000000000000000' // Placeholder, replace with actual contract address\n    };\n\n    const response = await this.makeRequest('/al-engine/command', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(command),\n    });\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n      throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Submit new labels for queried samples\n   */\n  async submitLabels(projectId: string, workflowId: string, labels: {\n    session_id: string;\n    labeled_samples: Array<{\n      sample_id: string;\n      label: any;\n      confidence?: number;\n      contributor?: string;\n    }>;\n  }): Promise<ALEngineResponse> {\n    const command: ALEngineCommand = {\n      command_type: 'submit_labels',\n      project_id: projectId,\n      workflow_id: workflowId,\n      parameters: labels,\n      timestamp: new Date().toISOString(),\n      // User authentication for commands\n      user_wallet: 'development-user', // Placeholder, replace with actual user\n      user_role: 'coordinator', // Placeholder, replace with actual user role\n      contract_address: '0x0000000000000000000000000000000000000000' // Placeholder, replace with actual contract address\n    };\n\n    const response = await this.makeRequest('/al-engine/command', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(command),\n    });\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n      throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Get current querying session status\n   */\n  async getQueryingSession(projectId: string, sessionId: string): Promise<QueryingSession> {\n    const response = await this.makeRequest(\n      `/al-engine/sessions/${encodeURIComponent(projectId)}/${encodeURIComponent(sessionId)}`\n    );\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n      throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * List all active querying sessions for a project\n   */\n  async listQueryingSessions(projectId: string): Promise<QueryingSession[]> {\n    const response = await this.makeRequest(`/al-engine/sessions/${encodeURIComponent(projectId)}`);\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n      throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    const data = await response.json();\n    return data.sessions || [];\n  }\n\n  /**\n   * Terminate a project and clean up resources\n   */\n  async terminateProject(projectId: string, workflowId: string): Promise<ALEngineResponse> {\n    const command: ALEngineCommand = {\n      command_type: 'terminate_project',\n      project_id: projectId,\n      workflow_id: workflowId,\n      parameters: {},\n      timestamp: new Date().toISOString(),\n      // User authentication for commands\n      user_wallet: 'development-user', // Placeholder, replace with actual user\n      user_role: 'coordinator', // Placeholder, replace with actual user role\n      contract_address: '0x0000000000000000000000000000000000000000' // Placeholder, replace with actual contract address\n    };\n\n    const response = await this.makeRequest('/al-engine/command', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(command),\n    });\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n      throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Check if the orchestration server is healthy and responding\n   */\n  async checkServerHealth(): Promise<boolean> {\n    try {\n      // Check Jupyter server API which should always be available\n      const response = await this.makeRequest('/api', { timeout: 5000 });\n      return response.ok;\n    } catch (error) {\n      console.warn('DAL: Server health check failed:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get server information and API documentation\n   */\n  async getServerInfo(): Promise<any> {\n    const response = await this.makeRequest('/');\n\n    if (!response.ok) {\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Poll workflow status until completion\n   */\n  async pollWorkflowUntilComplete(\n    workflowId: string, \n    intervalMs: number = 2000,\n    maxAttempts: number = 150 // 5 minutes at 2-second intervals\n  ): Promise<WorkflowStatus> {\n    let attempts = 0;\n\n    return new Promise((resolve, reject) => {\n      const poll = async () => {\n        try {\n          attempts++;\n          const status = await this.getWorkflowStatus(workflowId);\n\n          if (status.status === 'COMPLETED' || status.status === 'FAILED') {\n            resolve(status);\n            return;\n          }\n\n          if (attempts >= maxAttempts) {\n            reject(new Error(`Workflow polling timeout after ${maxAttempts} attempts`));\n            return;\n          }\n\n          // Continue polling\n          setTimeout(poll, intervalMs);\n        } catch (error) {\n          reject(error);\n        }\n      };\n\n      // Start polling\n      poll();\n    });\n  }\n\n  /**\n   * Validate workflow inputs before submission\n   */\n  validateInputs(cwlWorkflow: CWLWorkflow, inputs: Record<string, any>): {\n    valid: boolean;\n    errors: string[];\n    warnings: string[];\n  } {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    if (!cwlWorkflow.inputs) {\n      errors.push('CWL workflow has no inputs defined');\n      return { valid: false, errors, warnings };\n    }\n\n    // Check required inputs\n    for (const [inputName, inputDef] of Object.entries(cwlWorkflow.inputs)) {\n      const hasDefault = inputDef.default !== undefined;\n      const hasValue = inputs[inputName] !== undefined;\n\n      if (!hasDefault && !hasValue) {\n        errors.push(`Required input '${inputName}' is missing`);\n      }\n\n      // Type checking (basic)\n      if (hasValue) {\n        const expectedType = inputDef.type;\n        const actualValue = inputs[inputName];\n\n        if (expectedType === 'int' && !Number.isInteger(actualValue)) {\n          errors.push(`Input '${inputName}' should be an integer`);\n        } else if (expectedType === 'float' && typeof actualValue !== 'number') {\n          errors.push(`Input '${inputName}' should be a number`);\n        } else if (expectedType === 'string' && typeof actualValue !== 'string') {\n          errors.push(`Input '${inputName}' should be a string`);\n        }\n      }\n    }\n\n    // Check for extra inputs\n    for (const inputName of Object.keys(inputs)) {\n      if (!cwlWorkflow.inputs[inputName]) {\n        warnings.push(`Input '${inputName}' is not defined in the CWL workflow`);\n      }\n    }\n\n    return {\n      valid: errors.length === 0,\n      errors,\n      warnings\n    };\n  }\n\n  /**\n   * Get multi-user session statistics for a project\n   */\n  async getMultiUserSessionStats(projectId: string, userWallet: string, projectData: any): Promise<any> {\n    try {\n      // Create authenticated command for session stats\n      const response = await this.makeRequest(`/al-engine/session-stats/${encodeURIComponent(projectId)}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-User-Wallet': userWallet,\n          'X-User-Role': this.getUserRole(userWallet, projectData),\n          'X-Contract-Address': projectData?.address || projectId\n        }\n      });\n\n      if (!response.ok) {\n        if (response.status === 404) {\n          // No session found, return empty stats\n          return {\n            project_id: projectId,\n            contributors: [],\n            total_samples: 0,\n            consensus_samples: 0,\n            progress_percentage: 0\n          };\n        }\n        const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n        throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      return response.json();\n    } catch (error) {\n      console.warn('Failed to get session stats:', error);\n      // Return empty stats on error\n      return {\n        project_id: projectId,\n        contributors: [],\n        total_samples: 0,\n        consensus_samples: 0,\n        progress_percentage: 0\n      };\n    }\n  }\n\n  /**\n   * Send invitation to a contributor (placeholder for future implementation)\n   */\n  async sendContributorInvitation(invitation: {\n    projectId: string;\n    contributorWallet?: string;\n    contributorEmail?: string;\n    invitedBy: string;\n    message?: string;\n  }, userWallet: string, projectData: any): Promise<any> {\n    // TODO: Implement when server-side invitation system is ready\n    const response = await this.makeRequest('/contributors/invite', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        ...invitation,\n        user_wallet: userWallet,\n        user_role: this.getUserRole(userWallet, projectData),\n        contract_address: projectData?.address || invitation.projectId\n      }),\n    });\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n      throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Remove contributor from project (placeholder for future implementation)\n   */\n  async removeContributor(projectId: string, contributorWallet: string, userWallet: string, projectData: any): Promise<any> {\n    // TODO: Implement when server-side contributor management is ready\n    const response = await this.makeRequest('/contributors/remove', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        project_id: projectId,\n        contributor_wallet: contributorWallet,\n        user_wallet: userWallet,\n        user_role: this.getUserRole(userWallet, projectData),\n        contract_address: projectData?.address || projectId\n      }),\n    });\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n      throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  // Private methods\n\n  private async makeRequest(endpoint: string, options: RequestInit & { timeout?: number } = {}): Promise<Response> {\n    const { timeout = this.defaultTimeout, ...fetchOptions } = options;\n    const url = `${this.baseUrl}${endpoint}`;\n\n    // Create abort controller for timeout\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeout);\n\n    try {\n      const response = await fetch(url, {\n        ...fetchOptions,\n        signal: controller.signal\n      });\n      \n      clearTimeout(timeoutId);\n      return response;\n    } catch (error) {\n      clearTimeout(timeoutId);\n      \n      if (error.name === 'AbortError') {\n        throw new Error(`Request timeout after ${timeout}ms`);\n      }\n      \n      throw error;\n    }\n  }\n}\n\n// Export singleton instance with remote VM configuration\nexport const orchestrationAPI = new OrchestrationAPI(); ","import React, { useState, useEffect, useCallback } from 'react';\nimport { orchestrationAPI, QueryingSession, ALEngineResponse } from './OrchestrationAPI';\n\ninterface RuntimeOrchestrationPanelProps {\n  projectId: string;\n  workflowId: string;\n  projectTitle: string;\n  onClose?: () => void;\n}\n\ninterface SessionControlsProps {\n  session: QueryingSession;\n  onStartQuerying: () => void;\n  onContinueQuerying: () => void;\n  onPromptTraining: () => void;\n  onSubmitLabels: (labels: any[]) => void;\n  onTerminateProject: () => void;\n  isLoading: boolean;\n}\n\nconst SessionControls: React.FC<SessionControlsProps> = ({\n  session,\n  onStartQuerying,\n  onContinueQuerying,\n  onPromptTraining,\n  onSubmitLabels,\n  onTerminateProject,\n  isLoading\n}) => {\n  const [labelingMode, setLabelingMode] = useState(false);\n  const [labels, setLabels] = useState<Array<{ sample_id: string; label: string; confidence: number }>>([]);\n\n  const handleSubmitLabels = () => {\n    if (labels.length > 0) {\n      onSubmitLabels(labels);\n      setLabels([]);\n      setLabelingMode(false);\n    }\n  };\n\n  const addLabel = (sampleId: string) => {\n    const label = prompt(`Enter label for sample ${sampleId}:`);\n    if (label) {\n      const confidence = parseFloat(prompt('Enter confidence (0-1):') || '1.0');\n      setLabels(prev => [...prev, { sample_id: sampleId, label, confidence }]);\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'active': return 'var(--jp-success-color1)';\n      case 'waiting_for_labels': return 'var(--jp-warn-color1)';\n      case 'training': return 'var(--jp-info-color1)';\n      case 'completed': return 'var(--jp-layout-color3)';\n      default: return 'var(--jp-ui-font-color2)';\n    }\n  };\n\n  return (\n    <div className=\"session-controls\">\n      <div className=\"session-header\">\n        <h4>Session: {session.session_id.slice(0, 8)}...</h4>\n        <span \n          className=\"session-status\"\n          style={{ color: getStatusColor(session.status) }}\n        >\n          {session.status.toUpperCase()}\n        </span>\n      </div>\n\n      <div className=\"session-info\">\n        <div className=\"info-row\">\n          <span>Round:</span>\n          <span>{session.current_round} / {session.total_rounds}</span>\n        </div>\n        {session.accuracy_metrics?.accuracy && (\n          <div className=\"info-row\">\n            <span>Accuracy:</span>\n            <span>{(session.accuracy_metrics.accuracy * 100).toFixed(1)}%</span>\n          </div>\n        )}\n        <div className=\"info-row\">\n          <span>Queried Samples:</span>\n          <span>{session.queried_samples?.length || 0}</span>\n        </div>\n      </div>\n\n      <div className=\"session-actions\">\n        {session.status === 'active' && (\n          <button\n            onClick={onContinueQuerying}\n            disabled={isLoading}\n            className=\"action-btn primary\"\n          >\n            Continue Querying\n          </button>\n        )}\n\n        {session.status === 'waiting_for_labels' && (\n          <>\n            <button\n              onClick={() => setLabelingMode(!labelingMode)}\n              className=\"action-btn secondary\"\n            >\n              {labelingMode ? 'Cancel Labeling' : 'Label Samples'}\n            </button>\n            \n            {labelingMode && (\n              <div className=\"labeling-section\">\n                <h5>Queried Samples ({session.queried_samples?.length || 0})</h5>\n                <div className=\"samples-list\">\n                  {session.queried_samples?.slice(0, 5).map((sample: any) => (\n                    <div key={sample.sample_id} className=\"sample-item\">\n                      <span className=\"sample-id\">{sample.sample_id}</span>\n                      <span className=\"sample-uncertainty\">\n                        Uncertainty: {sample.uncertainty?.toFixed(3)}\n                      </span>\n                      <button\n                        onClick={() => addLabel(sample.sample_id)}\n                        className=\"label-btn\"\n                      >\n                        Add Label\n                      </button>\n                    </div>\n                  ))}\n                </div>\n                \n                {labels.length > 0 && (\n                  <div className=\"labeled-samples\">\n                    <h6>Labels Added ({labels.length})</h6>\n                    {labels.map((label, idx) => (\n                      <div key={idx} className=\"labeled-item\">\n                        {label.sample_id}: {label.label} (conf: {label.confidence})\n                      </div>\n                    ))}\n                    <button\n                      onClick={handleSubmitLabels}\n                      className=\"action-btn primary\"\n                    >\n                      Submit Labels\n                    </button>\n                  </div>\n                )}\n              </div>\n            )}\n          </>\n        )}\n\n        {(session.status === 'active' || session.status === 'waiting_for_labels') && (\n          <button\n            onClick={onPromptTraining}\n            disabled={isLoading}\n            className=\"action-btn secondary\"\n          >\n            Prompt Training\n          </button>\n        )}\n      </div>\n\n      <div className=\"danger-zone\">\n        <button\n          onClick={onTerminateProject}\n          disabled={isLoading}\n          className=\"action-btn danger\"\n        >\n          Terminate Project\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport const RuntimeOrchestrationPanel: React.FC<RuntimeOrchestrationPanelProps> = ({\n  projectId,\n  workflowId,\n  projectTitle,\n  onClose\n}) => {\n  const [sessions, setSessions] = useState<QueryingSession[]>([]);\n  const [selectedSession, setSelectedSession] = useState<QueryingSession | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [commandLog, setCommandLog] = useState<ALEngineResponse[]>([]);\n\n  // Load sessions on mount\n  useEffect(() => {\n    loadSessions();\n    const interval = setInterval(loadSessions, 5000); // Refresh every 5 seconds\n    return () => clearInterval(interval);\n  }, [projectId]);\n\n  const loadSessions = useCallback(async () => {\n    try {\n      const sessionList = await orchestrationAPI.listQueryingSessions(projectId);\n      setSessions(sessionList);\n      \n      // Update selected session if it exists\n      if (selectedSession) {\n        const updated = sessionList.find(s => s.session_id === selectedSession.session_id);\n        if (updated) {\n          setSelectedSession(updated);\n        }\n      }\n    } catch (err) {\n      console.error('Failed to load sessions:', err);\n    }\n  }, [projectId, selectedSession]);\n\n  const handleCommand = useCallback(async (commandType: string, parameters: any = {}) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      let response: ALEngineResponse;\n\n      switch (commandType) {\n        case 'start_querying':\n          response = await orchestrationAPI.startQuerying(projectId, workflowId, parameters);\n          break;\n        case 'continue_querying':\n          response = await orchestrationAPI.continueQuerying(projectId, workflowId, parameters.session_id);\n          break;\n        case 'prompt_training':\n          response = await orchestrationAPI.promptTraining(projectId, workflowId, {\n            session_id: parameters.session_id,\n            training_config: parameters.training_config || {}\n          });\n          break;\n        case 'submit_labels':\n          response = await orchestrationAPI.submitLabels(projectId, workflowId, {\n            session_id: parameters.session_id,\n            labeled_samples: parameters.labeled_samples\n          });\n          break;\n        case 'terminate_project':\n          response = await orchestrationAPI.terminateProject(projectId, workflowId);\n          break;\n        default:\n          throw new Error(`Unknown command type: ${commandType}`);\n      }\n\n      setCommandLog(prev => [response, ...prev.slice(0, 9)]); // Keep last 10 commands\n      \n      // Refresh sessions after command\n      setTimeout(loadSessions, 1000);\n      \n    } catch (err: any) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [projectId, workflowId, loadSessions]);\n\n  const startNewSession = () => {\n    const queryCount = parseInt(prompt('Enter query count (default 10):') || '10');\n    const strategy = prompt('Enter query strategy (default: uncertainty_sampling):') || 'uncertainty_sampling';\n    \n    handleCommand('start_querying', {\n      query_count: queryCount,\n      strategy_override: strategy,\n      max_rounds: 10\n    });\n  };\n\n  const continueQuerying = () => {\n    if (selectedSession) {\n      handleCommand('continue_querying', { session_id: selectedSession.session_id });\n    }\n  };\n\n  const promptTraining = () => {\n    if (selectedSession) {\n      handleCommand('prompt_training', { \n        session_id: selectedSession.session_id,\n        training_config: {}\n      });\n    }\n  };\n\n  const submitLabels = (labels: any[]) => {\n    if (selectedSession) {\n      handleCommand('submit_labels', {\n        session_id: selectedSession.session_id,\n        labeled_samples: labels\n      });\n    }\n  };\n\n  const terminateProject = () => {\n    if (confirm('Are you sure you want to terminate this project? This action cannot be undone.')) {\n      handleCommand('terminate_project');\n    }\n  };\n\n  return (\n    <div className=\"runtime-orchestration-panel\">\n      <div className=\"panel-header\">\n        <h2>Runtime Orchestration - {projectTitle}</h2>\n        <div className=\"header-info\">\n          <span>Project: {projectId}</span>\n          <span>Workflow: {workflowId.slice(0, 8)}...</span>\n        </div>\n        {onClose && (\n          <button onClick={onClose} className=\"close-button\">Close</button>\n        )}\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          <span>{error}</span>\n          <button onClick={() => setError(null)}>✕</button>\n        </div>\n      )}\n\n      <div className=\"panel-content\">\n        <div className=\"left-section\">\n          <div className=\"sessions-section\">\n            <div className=\"section-header\">\n              <h3>Active Learning Sessions</h3>\n              <button\n                onClick={startNewSession}\n                disabled={loading}\n                className=\"action-btn primary\"\n              >\n                Start New Session\n              </button>\n            </div>\n\n            {sessions.length === 0 ? (\n              <div className=\"empty-state\">\n                <p>No active sessions. Start a new querying session to begin.</p>\n              </div>\n            ) : (\n              <div className=\"sessions-list\">\n                {sessions.map(session => (\n                  <div\n                    key={session.session_id}\n                    className={`session-item ${selectedSession?.session_id === session.session_id ? 'selected' : ''}`}\n                    onClick={() => setSelectedSession(session)}\n                  >\n                    <div className=\"session-summary\">\n                      <div className=\"session-title\">\n                        Session {session.session_id.slice(0, 8)}...\n                      </div>\n                      <div className=\"session-meta\">\n                        <span className={`status ${session.status}`}>\n                          {session.status}\n                        </span>\n                        <span>Round {session.current_round}/{session.total_rounds}</span>\n                      </div>\n                      {session.accuracy_metrics?.accuracy && (\n                        <div className=\"accuracy\">\n                          Accuracy: {(session.accuracy_metrics.accuracy * 100).toFixed(1)}%\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          <div className=\"command-log-section\">\n            <h3>Command Log</h3>\n            <div className=\"command-log\">\n              {commandLog.length === 0 ? (\n                <p>No commands executed yet.</p>\n              ) : (\n                commandLog.map((cmd, idx) => (\n                  <div key={idx} className={`log-entry ${cmd.status}`}>\n                    <div className=\"log-header\">\n                      <span className=\"command-id\">{cmd.command_id?.slice(0, 8)}...</span>\n                      <span className=\"timestamp\">\n                        {new Date(cmd.timestamp).toLocaleTimeString()}\n                      </span>\n                      <span className={`status ${cmd.status}`}>{cmd.status}</span>\n                    </div>\n                    <div className=\"log-message\">{cmd.message}</div>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"right-section\">\n          {selectedSession ? (\n            <SessionControls\n              session={selectedSession}\n              onStartQuerying={startNewSession}\n              onContinueQuerying={continueQuerying}\n              onPromptTraining={promptTraining}\n              onSubmitLabels={submitLabels}\n              onTerminateProject={terminateProject}\n              isLoading={loading}\n            />\n          ) : (\n            <div className=\"no-session-selected\">\n              <h3>Select a Session</h3>\n              <p>Choose an active learning session from the left panel to view controls and details.</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}; ","import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\n\nimport { \n  ICommandPalette, \n  MainAreaWidget\n} from '@jupyterlab/apputils';\n\nimport { ILauncher } from '@jupyterlab/launcher';\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport { DALWidget } from './DALWidget';\n\n// Import CSS\nimport '../style/index.css';\n\nconst dalIcon = new LabIcon({\n  name: 'dvre-dal:icon',\n  svgstr: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><circle cx=\"8\" cy=\"8\" r=\"7\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\"/><path d=\"M8 4v8M4 8h8\" stroke=\"currentColor\" stroke-width=\"1.5\"/><path d=\"M6 6l4 4M10 6l-4 4\" stroke=\"currentColor\" stroke-width=\"1\" opacity=\"0.7\"/></svg>'\n});\n\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'jupyter-dvre-dal:plugin',\n  description: 'Decentralized Active Learning extension for DVRE',\n  autoStart: true,\n  requires: [ICommandPalette],\n  optional: [ILauncher],\n  activate: (\n    app: JupyterFrontEnd, \n    palette: ICommandPalette, \n    launcher: ILauncher | null\n  ) => {\n    console.log('DVRE DAL extension is activated!');\n\n    // NOTE: DVRE core registration removed due to TypeScript compatibility issues\n    // The extension works standalone and will be discovered by DVRE core if available\n\n    // Command for DAL\n    const dalCommand = 'dvre-dal:open';\n    app.commands.addCommand(dalCommand, {\n      label: 'Active Learning',\n      caption: 'Open Decentralized Active Learning interface',\n      icon: dalIcon,\n      execute: () => {\n        const content = new DALWidget('Decentralized Active Learning');\n        const widget = new MainAreaWidget({ content });\n        widget.id = `dvre-dal-${Date.now()}`;\n        widget.title.closable = true;\n        widget.title.icon = dalIcon;\n        \n        app.shell.add(widget, 'main');\n        app.shell.activateById(widget.id);\n      }\n    });\n\n    // Add to command palette\n    palette.addItem({ command: dalCommand, category: 'DVRE' });\n\n    // Add to launcher if available\n    if (launcher) {\n      launcher.add({\n        command: dalCommand,\n        category: 'DVRE',\n        rank: 10\n      });\n      console.log('DAL extension added to launcher successfully!');\n    } else {\n      console.log('Launcher not available - DAL extension only in command palette');\n    }\n  }\n};\n\nexport default plugin; ","// DVRE Integration Layer for DAL Extension\n// This replicates DVRE's exact hook patterns for project loading\n\nimport { useState, useEffect, useCallback } from 'react';\n\n// Import contract ABIs (copied from main DVRE extension)\nimport ProjectFactory from '../abis/ProjectFactory.json';\nimport JSONProject from '../abis/JSONProject.json';\nimport FactoryRegistry from '../abis/FactoryRegistry.json';\n\n// Configuration matching main DVRE extension\nconst FACTORY_REGISTRY_ADDRESS = \"0x0000000000000000000000000000000000001000\";\nconst RPC_URL = 'http://145.100.135.27:8550';\n\n// Types matching DVRE's project structure exactly\nexport interface ProjectMember {\n  address: string;\n  role: string;\n  name?: string;\n}\n\nexport interface JoinRequest {\n  requester: string;\n  role: string;\n  timestamp: number;\n}\n\nexport interface ProjectInfo {\n  address: string;\n  projectId: string;\n  objective: string;\n  description?: string;\n  creator: string;\n  isActive: boolean;\n  created: number;\n  lastModified: number;\n  participants: ProjectMember[];\n  joinRequests: JoinRequest[];\n  projectData: any; // Full parsed JSON\n  // UI helpers\n  isMember: boolean;\n  isOwner: boolean;\n  hasPendingRequest: boolean;\n  memberCount: number;\n}\n\n// Hook to replicate useAuth functionality\nexport const useDVREAuth = () => {\n  const [account, setAccount] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    console.log('DAL: Initializing auth...');\n    \n    const checkAuth = async () => {\n      try {\n        if (typeof window !== 'undefined' && (window as any).ethereum) {\n          const accounts = await (window as any).ethereum.request({ method: 'eth_accounts' });\n          if (accounts && accounts.length > 0) {\n            setAccount(accounts[0]);\n            console.log('DAL: Connected via MetaMask:', accounts[0]);\n          }\n        }\n      } catch (err: any) {\n        console.error('DAL: Auth check failed:', err);\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    checkAuth();\n\n    // Listen for account changes\n    if (typeof window !== 'undefined' && (window as any).ethereum) {\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log('DAL: Account changed:', accounts);\n        if (accounts && accounts.length > 0) {\n          setAccount(accounts[0]);\n        } else {\n          setAccount(null);\n        }\n      };\n\n      (window as any).ethereum.on('accountsChanged', handleAccountsChanged);\n\n      return () => {\n        (window as any).ethereum.removeListener('accountsChanged', handleAccountsChanged);\n      };\n    }\n  }, []);\n\n  const connect = async () => {\n    try {\n      setError(null);\n      if (typeof window !== 'undefined' && (window as any).ethereum) {\n        const accounts = await (window as any).ethereum.request({ \n          method: 'eth_requestAccounts' \n        });\n        if (accounts && accounts.length > 0) {\n          setAccount(accounts[0]);\n        }\n      }\n    } catch (err: any) {\n      console.error('DAL: Connect failed:', err);\n      setError(err.message);\n    }\n  };\n\n  const disconnect = () => {\n    setAccount(null);\n  };\n\n  return { \n    account, \n    isConnected: !!account, \n    connect, \n    disconnect, \n    isLoading, \n    error \n  };\n};\n\n// Hook to replicate useFactoryRegistry functionality\nexport const useFactoryRegistry = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Get a single factory address by name (exactly like DVRE)\n  const getFactoryAddress = useCallback(async (factoryName: string): Promise<string | null> => {\n    if (!factoryName) {\n      setError(\"Factory name is required\");\n      return null;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const { ethers } = await import('ethers');\n      const provider = new ethers.JsonRpcProvider(RPC_URL);\n      const registryContract = new ethers.Contract(FACTORY_REGISTRY_ADDRESS, FactoryRegistry.abi, provider);\n\n      const address = await registryContract.get(factoryName);\n      \n      // Check if address is zero address (not found)\n      if (address === \"0x0000000000000000000000000000000000000000\") {\n        setError(`Factory \"${factoryName}\" not found in registry`);\n        return null;\n      }\n\n      setLoading(false);\n      return address;\n    } catch (err: any) {\n      setError(`Failed to get factory address: ${err.message}`);\n      setLoading(false);\n      return null;\n    }\n  }, []);\n\n  // Convenience method to get factory contract instance (exactly like DVRE)\n  const getFactoryContract = useCallback(async (factoryName: string, abi: any[], signer?: any): Promise<any | null> => {\n    const address = await getFactoryAddress(factoryName);\n    if (!address) return null;\n\n    const { ethers } = await import('ethers');\n    const provider = signer || new ethers.JsonRpcProvider(RPC_URL);\n    return new ethers.Contract(address, abi, provider);\n  }, [getFactoryAddress]);\n\n  return {\n    loading,\n    error,\n    getFactoryAddress,\n    getFactoryContract,\n    clearError: () => setError(null)\n  };\n};\n\n// Hook to replicate useProjects functionality\nexport const useDVREProjects = () => {\n  const [projects, setProjects] = useState<ProjectInfo[]>([]);\n  const [userProjects, setUserProjects] = useState<ProjectInfo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  \n  const { getFactoryContract } = useFactoryRegistry();\n  const { account } = useDVREAuth();\n\n  const getProvider = () => {\n    const { ethers } = require('ethers');\n    return new ethers.JsonRpcProvider(RPC_URL);\n  };\n\n  // Get detailed project information (exactly like DVRE's implementation)\n  const getProjectInfo = useCallback(async (projectAddress: string): Promise<ProjectInfo | null> => {\n    try {\n      const provider = getProvider();\n      const { ethers } = await import('ethers');\n      const projectContract = new ethers.Contract(projectAddress, JSONProject.abi, provider);\n\n      // First, validate that this is a valid contract by checking if it has code\n      const code = await provider.getCode(projectAddress);\n      if (code === '0x') {\n        console.warn(`DAL: No contract code at address ${projectAddress}`);\n        return null;\n      }\n\n      // Try to call a simple read function first to validate the contract\n      try {\n        await projectContract.creator();\n      } catch (err) {\n        console.warn(`DAL: Address ${projectAddress} is not a valid JSONProject contract:`, err);\n        return null;\n      }\n\n      const projectDataString = await projectContract.getProjectData();\n      let projectData;\n      \n      try {\n        projectData = JSON.parse(projectDataString);\n      } catch (parseErr) {\n        console.error(`DAL: Invalid JSON in project ${projectAddress}:`, parseErr);\n        return null;\n      }\n      \n      // Get project status (returns: active, created, modified, creator)\n      const projectStatus = await projectContract.getProjectStatus();\n      const projectInfo = {\n        creator: projectStatus.projectCreator,\n        isActive: projectStatus.active,\n        created: Number(projectStatus.created),\n        lastModified: Number(projectStatus.modified)\n      };\n\n      // Extract participants from project data (address and role)\n      const participants: ProjectMember[] = [];\n      if (projectData.participants && Array.isArray(projectData.participants)) {\n        participants.push(...projectData.participants);\n      }\n\n      // Get join requests from contract\n      const joinRequests: JoinRequest[] = [];\n      try {\n        const requesters = await projectContract.getAllRequesters();\n        for (const requester of requesters) {\n          const request = await projectContract.getJoinRequest(requester);\n          if (request.exists) {\n            joinRequests.push({\n              requester: request.requester,\n              role: request.role,\n              timestamp: Number(request.timestamp)\n            });\n          }\n        }\n      } catch (err) {\n        console.warn('DAL: Failed to get join requests:', err);\n      }\n\n      // Find the user's membership (might be owner or regular member)\n      const userParticipant = participants.find(p => p.address.toLowerCase() === account?.toLowerCase());\n      const isOwner = projectInfo.creator.toLowerCase() === account?.toLowerCase();\n      const isMember = !!userParticipant || isOwner;\n      const hasPendingRequest = joinRequests.some(r => r.requester.toLowerCase() === account?.toLowerCase());\n\n      // Count of participants in the project\n      const memberCount = participants.length;\n\n      return {\n        address: projectAddress,\n        projectId: projectData.project_id || projectData.projectId || 'Unknown',\n        objective: projectData.objective || 'No objective specified',\n        description: projectData.description,\n        creator: projectInfo.creator,\n        isActive: projectInfo.isActive,\n        created: Number(projectInfo.created),\n        lastModified: Number(projectInfo.lastModified),\n        participants,\n        joinRequests,\n        projectData,\n        isMember,\n        isOwner,\n        hasPendingRequest,\n        memberCount\n      };\n    } catch (err) {\n      console.error(`DAL: Failed to get project info for ${projectAddress}:`, err);\n      return null;\n    }\n  }, [account]);\n\n  // Load all projects (exactly like DVRE's implementation)\n  const loadProjects = useCallback(async () => {\n    if (!account) return;\n    \n    setLoading(true);\n    setError(null);\n\n    try {\n      const factoryContract = await getFactoryContract(\n        \"ProjectFactory\",\n        ProjectFactory.abi\n      );\n\n      if (!factoryContract) {\n        throw new Error(\"ProjectFactory not found\");\n      }\n\n      const projectAddresses = await factoryContract.getAllProjects();\n      console.log(`DAL: Found ${projectAddresses.length} total projects`);\n      \n      const allProjects: ProjectInfo[] = [];\n\n      for (let i = 0; i < projectAddresses.length; i++) {\n        try {\n          const projectInfo = await getProjectInfo(projectAddresses[i]);\n          if (projectInfo) {\n            allProjects.push(projectInfo);\n          }\n        } catch (err) {\n          console.warn(`DAL: Failed to load project at address ${projectAddresses[i]}:`, err);\n        }\n      }\n\n      // Separate user projects from all projects (exactly like DVRE)\n      const userProjectsList = allProjects.filter(p => p.isMember || p.isOwner);\n      const availableProjectsList = allProjects.filter(p => !p.isMember && !p.isOwner);\n\n      setUserProjects(userProjectsList);\n      setProjects(availableProjectsList);\n      setLoading(false);\n      \n      console.log(`DAL: Successfully loaded ${userProjectsList.length} user projects out of ${allProjects.length} total`);\n      \n    } catch (err: any) {\n      setError(`Failed to load projects: ${err.message}`);\n      setLoading(false);\n    }\n  }, [account, getFactoryContract, getProjectInfo]);\n\n  // Initialize data on mount (exactly like DVRE)\n  useEffect(() => {\n    if (account) {\n      loadProjects();\n    }\n  }, [account, loadProjects]);\n\n  return {\n    // State\n    projects,\n    userProjects,\n    loading,\n    error,\n\n    // Methods\n    loadProjects,\n    getProjectInfo,\n\n    // Utility\n    clearError: () => setError(null)\n  };\n};\n\n// Filter projects to get only Active Learning projects\nexport const useActiveLearningProjects = (account: string | null) => {\n  const { userProjects, loading, error, loadProjects } = useDVREProjects();\n  \n  // Use the same filtering approach as Federated Learning\n  const alProjects = userProjects.filter(project => \n    project.projectData?.type === 'active_learning'\n  );\n\n  console.log('DAL: Total user projects:', userProjects.length, 'AL projects:', alProjects.length);\n  if (userProjects.length > 0) {\n    console.log('DAL: Project details:', userProjects.map(p => ({ \n      objective: p.objective, \n      type: p.projectData?.type,\n      isMember: p.isMember,\n      isOwner: p.isOwner\n    })));\n  }\n\n  return {\n    projects: alProjects,\n    loading,\n    error,\n    loadProjects\n  };\n}; "],"names":[],"sourceRoot":""}
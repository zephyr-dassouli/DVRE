{"version":3,"file":"lib_index_js.8a8da1124d016046f383.js","mappings":"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","sources":["webpack://dal/./src/CWLManager.ts","webpack://dal/./src/CWLWorkflowEditor.tsx","webpack://dal/./src/DALComponent.tsx","webpack://dal/./src/DALWidget.tsx","webpack://dal/./src/OrchestrationAPI.ts","webpack://dal/./src/RuntimeOrchestrationPanel.tsx","webpack://dal/./src/index.ts"],"sourcesContent":["/**\n * Client-Side CWL Manager for DVRE DAL Extension\n * Handles local storage, auto-save, and validation of CWL workflows\n */\n\nexport interface ALConfiguration {\n  queryStrategy: string;\n  modelConfig: any;\n  labelingBudget: number;\n  maxIterations: number;\n  isFederated: boolean;\n  contributors: string[];\n  dataset?: string;\n  validationSplit?: number;\n}\n\nexport interface CWLWorkflow {\n  cwlVersion: string;\n  class: string;\n  id: string;\n  label?: string;\n  inputs: Record<string, any>;\n  outputs: Record<string, any>;\n  steps: Record<string, any>;\n}\n\nexport interface CWLMetadata {\n  creator: string;\n  lastModified: string;\n  version: number;\n  autoSaved: boolean;\n  status: 'draft' | 'finalized' | 'deployed';\n  finalizedAt?: string;\n  deployedAt?: string;\n  workflowId?: string;\n  projectTitle?: string;\n  alConfig?: ALConfiguration;\n}\n\nexport interface StoredCWL {\n  cwl: CWLWorkflow;\n  metadata: CWLMetadata;\n}\n\nexport class ClientCWLManager {\n  private storageKey = 'dvre-project-cwls';\n  private autoSaveCallbacks: Map<string, () => void> = new Map();\n\n  constructor() {\n    // Clean up old auto-save entries on initialization\n    this.cleanupOldEntries();\n  }\n\n  /**\n   * Save CWL workflow locally (project creator only)\n   */\n  saveCWL(projectId: string, cwlWorkflow: CWLWorkflow, metadata: Partial<CWLMetadata> = {}): void {\n    const storage = this.getProjectCWLs();\n    const existingData = storage[projectId];\n    \n    const updatedMetadata: CWLMetadata = {\n      creator: this.getCurrentUser(),\n      lastModified: new Date().toISOString(),\n      version: existingData ? existingData.metadata.version + 1 : 1,\n      autoSaved: metadata.autoSaved || false,\n      status: metadata.status || 'draft',\n      ...existingData?.metadata,\n      ...metadata\n    };\n\n    storage[projectId] = {\n      cwl: cwlWorkflow,\n      metadata: updatedMetadata\n    };\n\n    localStorage.setItem(this.storageKey, JSON.stringify(storage));\n    this.notifyAutoSave(projectId);\n  }\n\n  /**\n   * Load CWL workflow (only if user is project creator)\n   */\n  loadCWL(projectId: string): StoredCWL | null {\n    const storage = this.getProjectCWLs();\n    const cwlData = storage[projectId];\n\n    if (!cwlData) return null;\n\n    // Verify user is the creator\n    if (cwlData.metadata.creator !== this.getCurrentUser()) {\n      throw new Error('Access denied: Only project creator can edit CWL');\n    }\n\n    return cwlData;\n  }\n\n  /**\n   * Auto-save while editing\n   */\n  autoSave(projectId: string, cwlWorkflow: CWLWorkflow): void {\n    this.saveCWL(projectId, cwlWorkflow, {\n      autoSaved: true,\n      status: 'draft'\n    });\n  }\n\n  /**\n   * Mark as finalized (ready for deployment)\n   */\n  finalizeCWL(projectId: string): boolean {\n    const cwlData = this.loadCWL(projectId);\n    if (!cwlData) return false;\n\n    // Validate CWL before finalizing\n    if (!this.validateCWL(cwlData.cwl)) {\n      throw new Error('CWL validation failed');\n    }\n\n    this.saveCWL(projectId, cwlData.cwl, {\n      ...cwlData.metadata,\n      status: 'finalized',\n      finalizedAt: new Date().toISOString()\n    });\n\n    return true;\n  }\n\n  /**\n   * Mark as deployed\n   */\n  markAsDeployed(projectId: string, workflowId: string): void {\n    const cwlData = this.loadCWL(projectId);\n    if (!cwlData) return;\n\n    this.saveCWL(projectId, cwlData.cwl, {\n      ...cwlData.metadata,\n      status: 'deployed',\n      deployedAt: new Date().toISOString(),\n      workflowId: workflowId\n    });\n  }\n\n  /**\n   * Check if user can edit CWL for this project\n   */\n  canEdit(projectId: string): boolean {\n    try {\n      const cwlData = this.loadCWL(projectId);\n      return cwlData !== null;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Get CWL status for project\n   */\n  getStatus(projectId: string): string {\n    const cwlData = this.loadCWL(projectId);\n    return cwlData?.metadata.status || 'none';\n  }\n\n  /**\n   * Validate CWL workflow structure\n   */\n  validateCWL(cwl: CWLWorkflow): boolean {\n    try {\n      // Check required fields\n      if (!cwl.cwlVersion || !cwl.class) return false;\n\n      // Validate CWL version\n      if (!['v1.0', 'v1.1', 'v1.2'].includes(cwl.cwlVersion)) return false;\n\n      // Validate class\n      if (!['Workflow', 'CommandLineTool', 'ExpressionTool'].includes(cwl.class)) return false;\n\n      // Check for inputs and outputs in workflows\n      if (cwl.class === 'Workflow') {\n        if (!cwl.inputs || !cwl.outputs || !cwl.steps) return false;\n      }\n\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Create basic AL workflow template\n   */\n  createALTemplate(projectId: string, projectTitle: string, alConfig: ALConfiguration): CWLWorkflow {\n    return {\n      cwlVersion: \"v1.0\",\n      class: \"Workflow\",\n      id: projectId,\n      label: `Active Learning Workflow - ${projectTitle}`,\n      inputs: {\n        dataset: {\n          type: \"File\",\n          doc: \"Training dataset for active learning\"\n        },\n        query_strategy: {\n          type: \"string\",\n          default: alConfig.queryStrategy,\n          doc: \"Active learning query strategy\"\n        },\n        model_config: {\n          type: \"string\",\n          default: JSON.stringify(alConfig.modelConfig),\n          doc: \"Model configuration JSON\"\n        },\n        labeling_budget: {\n          type: \"int\",\n          default: alConfig.labelingBudget,\n          doc: \"Number of samples to label per iteration\"\n        },\n        max_iterations: {\n          type: \"int\",\n          default: alConfig.maxIterations,\n          doc: \"Maximum AL iterations\"\n        },\n        validation_split: {\n          type: \"float\",\n          default: alConfig.validationSplit || 0.2,\n          doc: \"Validation data split ratio\"\n        }\n      },\n      outputs: {\n        trained_model: {\n          type: \"File\",\n          outputSource: \"active_learning/final_model\"\n        },\n        learning_curve: {\n          type: \"File\",\n          outputSource: \"active_learning/metrics\"\n        },\n        selected_samples: {\n          type: \"File\",\n          outputSource: \"active_learning/queries\"\n        }\n      },\n      steps: {\n        data_preprocessing: {\n          run: \"data_preprocessing.cwl\",\n          in: {\n            raw_dataset: \"dataset\",\n            validation_ratio: \"validation_split\"\n          },\n          out: [\"clean_data\", \"validation_split\"]\n        },\n        active_learning: {\n          run: \"active_learning_pipeline.cwl\",\n          in: {\n            training_data: \"data_preprocessing/clean_data\",\n            validation_data: \"data_preprocessing/validation_split\",\n            strategy: \"query_strategy\",\n            model: \"model_config\",\n            budget: \"labeling_budget\",\n            iterations: \"max_iterations\"\n          },\n          out: [\"final_model\", \"metrics\", \"queries\"]\n        }\n      }\n    };\n  }\n\n  /**\n   * Update CWL with new AL configuration\n   */\n  updateALConfiguration(projectId: string, alConfig: ALConfiguration): void {\n    const cwlData = this.loadCWL(projectId);\n    if (!cwlData) return;\n\n    const updatedCWL = { ...cwlData.cwl };\n\n    // Update inputs based on AL configuration\n    updatedCWL.inputs.query_strategy.default = alConfig.queryStrategy;\n    updatedCWL.inputs.model_config.default = JSON.stringify(alConfig.modelConfig);\n    updatedCWL.inputs.labeling_budget.default = alConfig.labelingBudget;\n    updatedCWL.inputs.max_iterations.default = alConfig.maxIterations;\n\n    // Add contributor-specific inputs if federated\n    if (alConfig.isFederated) {\n      updatedCWL.inputs.contributors = {\n        type: \"string[]\",\n        default: alConfig.contributors,\n        doc: \"List of federated learning contributors\"\n      };\n\n      // Add federated learning step\n      updatedCWL.steps.federated_coordination = {\n        run: \"federated_coordination.cwl\",\n        in: {\n          contributors: \"contributors\",\n          model_updates: \"active_learning/model_updates\"\n        },\n        out: [\"aggregated_model\", \"coordination_log\"]\n      };\n    }\n\n    this.saveCWL(projectId, updatedCWL, {\n      ...cwlData.metadata,\n      alConfig: alConfig\n    });\n  }\n\n  /**\n   * Set up auto-save for a project\n   */\n  setupAutoSave(projectId: string, getCWLCallback: () => CWLWorkflow, intervalMs: number = 30000): void {\n    // Clear existing interval\n    this.clearAutoSave(projectId);\n\n    const autoSaveFunction = () => {\n      try {\n        const cwl = getCWLCallback();\n        if (cwl) {\n          this.autoSave(projectId, cwl);\n        }\n      } catch (error) {\n        console.warn(`Auto-save failed for project ${projectId}:`, error);\n      }\n    };\n\n    const intervalId = setInterval(autoSaveFunction, intervalMs);\n    this.autoSaveCallbacks.set(projectId, () => clearInterval(intervalId));\n  }\n\n  /**\n   * Clear auto-save for a project\n   */\n  clearAutoSave(projectId: string): void {\n    const clearCallback = this.autoSaveCallbacks.get(projectId);\n    if (clearCallback) {\n      clearCallback();\n      this.autoSaveCallbacks.delete(projectId);\n    }\n  }\n\n  /**\n   * Get all projects with CWL workflows\n   */\n  getAllProjects(): string[] {\n    const storage = this.getProjectCWLs();\n    return Object.keys(storage);\n  }\n\n  /**\n   * Delete CWL for a project\n   */\n  deleteCWL(projectId: string): boolean {\n    const storage = this.getProjectCWLs();\n    if (storage[projectId]) {\n      delete storage[projectId];\n      localStorage.setItem(this.storageKey, JSON.stringify(storage));\n      this.clearAutoSave(projectId);\n      return true;\n    }\n    return false;\n  }\n\n  // Private methods\n\n  private getProjectCWLs(): Record<string, StoredCWL> {\n    try {\n      const stored = localStorage.getItem(this.storageKey);\n      return stored ? JSON.parse(stored) : {};\n    } catch (error) {\n      console.error('Failed to parse stored CWL data:', error);\n      return {};\n    }\n  }\n\n  private getCurrentUser(): string {\n    // In a real implementation, this would get the user from auth system\n    // For now, we'll use a simple identifier\n    return localStorage.getItem('dvre-user-id') || 'anonymous';\n  }\n\n  private notifyAutoSave(projectId: string): void {\n    // Dispatch custom event for UI components to listen to\n    window.dispatchEvent(new CustomEvent('dvre-cwl-saved', {\n      detail: { projectId, timestamp: new Date().toISOString() }\n    }));\n  }\n\n  private cleanupOldEntries(maxAgeMs: number = 7 * 24 * 60 * 60 * 1000): void {\n    // Clean up entries older than 7 days by default\n    const storage = this.getProjectCWLs();\n    const now = new Date().getTime();\n    let hasChanges = false;\n\n    for (const [projectId, data] of Object.entries(storage)) {\n      const lastModified = new Date(data.metadata.lastModified).getTime();\n      if (now - lastModified > maxAgeMs && data.metadata.status === 'draft') {\n        delete storage[projectId];\n        hasChanges = true;\n      }\n    }\n\n    if (hasChanges) {\n      localStorage.setItem(this.storageKey, JSON.stringify(storage));\n    }\n  }\n}\n\n// Export singleton instance\nexport const cwlManager = new ClientCWLManager(); ","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { cwlManager, ALConfiguration, CWLWorkflow, StoredCWL } from './CWLManager';\nimport { orchestrationAPI, WorkflowStatus } from './OrchestrationAPI';\n\ninterface CWLWorkflowEditorProps {\n  projectId: string;\n  projectTitle: string;\n  onClose?: () => void;\n  onWorkflowDeployed?: (workflowId: string) => void;\n}\n\ninterface AutoSaveIndicatorProps {\n  lastSaved?: string;\n  isAutoSaving?: boolean;\n}\n\nconst AutoSaveIndicator: React.FC<AutoSaveIndicatorProps> = ({ lastSaved, isAutoSaving }) => {\n  if (isAutoSaving) {\n    return (\n      <div className=\"autosave-indicator saving\">\n        <span className=\"dot-animation\">●</span> Auto-saving...\n      </div>\n    );\n  }\n\n  if (lastSaved) {\n    const timeAgo = new Date(lastSaved).toLocaleTimeString();\n    return (\n      <div className=\"autosave-indicator saved\">\n        ✓ Saved at {timeAgo}\n      </div>\n    );\n  }\n\n  return null;\n};\n\ninterface ALConfigurationPanelProps {\n  config: ALConfiguration;\n  onChange: (config: ALConfiguration) => void;\n  disabled?: boolean;\n}\n\nconst ALConfigurationPanel: React.FC<ALConfigurationPanelProps> = ({ \n  config, \n  onChange, \n  disabled = false \n}) => {\n  const updateConfig = (updates: Partial<ALConfiguration>) => {\n    onChange({ ...config, ...updates });\n  };\n\n  return (\n    <div className=\"al-config-panel\">\n      <h3>Active Learning Configuration</h3>\n      \n      <div className=\"config-grid\">\n        <div className=\"config-group\">\n          <label htmlFor=\"query-strategy\">Query Strategy:</label>\n          <select\n            id=\"query-strategy\"\n            value={config.queryStrategy}\n            onChange={(e) => updateConfig({ queryStrategy: e.target.value })}\n            disabled={disabled}\n          >\n            <option value=\"uncertainty_sampling\">Uncertainty Sampling</option>\n            <option value=\"diversity_sampling\">Diversity Sampling</option>\n            <option value=\"query_by_committee\">Query by Committee</option>\n            <option value=\"expected_model_change\">Expected Model Change</option>\n            <option value=\"random_sampling\">Random Sampling</option>\n          </select>\n        </div>\n\n        <div className=\"config-group\">\n          <label htmlFor=\"labeling-budget\">Labeling Budget:</label>\n          <input\n            id=\"labeling-budget\"\n            type=\"number\"\n            min=\"1\"\n            max=\"10000\"\n            value={config.labelingBudget}\n            onChange={(e) => updateConfig({ labelingBudget: parseInt(e.target.value) || 100 })}\n            disabled={disabled}\n          />\n        </div>\n\n        <div className=\"config-group\">\n          <label htmlFor=\"max-iterations\">Max Iterations:</label>\n          <input\n            id=\"max-iterations\"\n            type=\"number\"\n            min=\"1\"\n            max=\"100\"\n            value={config.maxIterations}\n            onChange={(e) => updateConfig({ maxIterations: parseInt(e.target.value) || 10 })}\n            disabled={disabled}\n          />\n        </div>\n\n        <div className=\"config-group\">\n          <label htmlFor=\"validation-split\">Validation Split:</label>\n          <input\n            id=\"validation-split\"\n            type=\"number\"\n            min=\"0.1\"\n            max=\"0.5\"\n            step=\"0.05\"\n            value={config.validationSplit || 0.2}\n            onChange={(e) => updateConfig({ validationSplit: parseFloat(e.target.value) || 0.2 })}\n            disabled={disabled}\n          />\n        </div>\n      </div>\n\n      <div className=\"config-group\">\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={config.isFederated}\n            onChange={(e) => updateConfig({ isFederated: e.target.checked })}\n            disabled={disabled}\n          />\n          Enable Federated Learning\n        </label>\n      </div>\n\n      {config.isFederated && (\n        <div className=\"config-group\">\n          <label htmlFor=\"contributors\">Contributors (comma-separated):</label>\n          <input\n            id=\"contributors\"\n            type=\"text\"\n            value={config.contributors.join(', ')}\n            onChange={(e) => updateConfig({ \n              contributors: e.target.value.split(',').map(s => s.trim()).filter(s => s) \n            })}\n            placeholder=\"alice@example.com, bob@example.com\"\n            disabled={disabled}\n          />\n        </div>\n      )}\n\n      <div className=\"config-group\">\n        <label htmlFor=\"model-config\">Model Configuration (JSON):</label>\n        <textarea\n          id=\"model-config\"\n          value={JSON.stringify(config.modelConfig, null, 2)}\n          onChange={(e) => {\n            try {\n              const parsed = JSON.parse(e.target.value);\n              updateConfig({ modelConfig: parsed });\n            } catch (error) {\n              // Invalid JSON, but still update to show user's input\n              updateConfig({ modelConfig: e.target.value });\n            }\n          }}\n          rows={8}\n          disabled={disabled}\n          placeholder='{\"model_type\": \"neural_network\", \"layers\": [64, 32], \"learning_rate\": 0.001}'\n        />\n      </div>\n    </div>\n  );\n};\n\ninterface CWLCodeEditorProps {\n  cwl: CWLWorkflow;\n  onChange: (cwl: CWLWorkflow) => void;\n  disabled?: boolean;\n}\n\nconst CWLCodeEditor: React.FC<CWLCodeEditorProps> = ({ cwl, onChange, disabled = false }) => {\n  const [jsonText, setJsonText] = useState('');\n  const [isValid, setIsValid] = useState(true);\n\n  useEffect(() => {\n    setJsonText(JSON.stringify(cwl, null, 2));\n  }, [cwl]);\n\n  const handleChange = (value: string) => {\n    setJsonText(value);\n    \n    try {\n      const parsed = JSON.parse(value);\n      setIsValid(true);\n      onChange(parsed);\n    } catch (error) {\n      setIsValid(false);\n    }\n  };\n\n  return (\n    <div className=\"cwl-code-editor\">\n      <h3>CWL Workflow Definition</h3>\n      <div className={`editor-container ${!isValid ? 'invalid' : ''}`}>\n        <textarea\n          value={jsonText}\n          onChange={(e) => handleChange(e.target.value)}\n          disabled={disabled}\n          rows={25}\n          className=\"cwl-textarea\"\n          spellCheck={false}\n        />\n        {!isValid && (\n          <div className=\"validation-error\">\n            Invalid JSON syntax. Please check your formatting.\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\ninterface WorkflowValidationPanelProps {\n  cwl: CWLWorkflow;\n}\n\nconst WorkflowValidationPanel: React.FC<WorkflowValidationPanelProps> = ({ cwl }) => {\n  const [validation, setValidation] = useState<{\n    valid: boolean;\n    errors: string[];\n    warnings: string[];\n  } | null>(null);\n\n  useEffect(() => {\n    const isValid = cwlManager.validateCWL(cwl);\n    // For now, just basic validation - could be enhanced\n    setValidation({\n      valid: isValid,\n      errors: isValid ? [] : ['CWL validation failed'],\n      warnings: []\n    });\n  }, [cwl]);\n\n  if (!validation) return null;\n\n  return (\n    <div className=\"validation-panel\">\n      <h3>Validation Status</h3>\n      <div className={`validation-status ${validation.valid ? 'valid' : 'invalid'}`}>\n        {validation.valid ? (\n          <div className=\"validation-success\">\n            ✓ Workflow is valid and ready for deployment\n          </div>\n        ) : (\n          <div className=\"validation-errors\">\n            <h4>Errors:</h4>\n            <ul>\n              {validation.errors.map((error, index) => (\n                <li key={index}>{error}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n        \n        {validation.warnings.length > 0 && (\n          <div className=\"validation-warnings\">\n            <h4>Warnings:</h4>\n            <ul>\n              {validation.warnings.map((warning, index) => (\n                <li key={index}>{warning}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\ninterface DeploymentPanelProps {\n  onDeploy: () => Promise<void>;\n  status: string;\n  workflowId?: string;\n  canDeploy: boolean;\n  isDeploying: boolean;\n  error?: string;\n}\n\nconst DeploymentPanel: React.FC<DeploymentPanelProps> = ({\n  onDeploy,\n  status,\n  workflowId,\n  canDeploy,\n  isDeploying,\n  error\n}) => {\n  return (\n    <div className=\"deployment-panel\">\n      <h3>Deployment</h3>\n      \n      <div className=\"deployment-status\">\n        <span className={`status-badge ${status}`}>\n          {status.toUpperCase()}\n        </span>\n        \n        {workflowId && (\n          <div className=\"workflow-id\">\n            Workflow ID: <code>{workflowId}</code>\n          </div>\n        )}\n      </div>\n\n      {error && (\n        <div className=\"deployment-error\">\n          <strong>Deployment Error:</strong> {error}\n        </div>\n      )}\n\n      <button\n        onClick={onDeploy}\n        disabled={!canDeploy || isDeploying}\n        className={`deploy-button ${canDeploy ? 'ready' : 'disabled'}`}\n      >\n        {isDeploying ? 'Deploying...' : 'Deploy Workflow'}\n      </button>\n      \n      <div className=\"deployment-info\">\n        {canDeploy ? (\n          <p>Ready to deploy to orchestration server</p>\n        ) : (\n          <p>Fix validation errors before deploying</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport const CWLWorkflowEditor: React.FC<CWLWorkflowEditorProps> = ({\n  projectId,\n  projectTitle,\n  onClose,\n  onWorkflowDeployed\n}) => {\n  const [cwlWorkflow, setCwlWorkflow] = useState<CWLWorkflow | null>(null);\n  const [metadata, setMetadata] = useState<any>(null);\n  const [readOnly, setReadOnly] = useState(false);\n  const [lastAutoSave, setLastAutoSave] = useState<string | null>(null);\n  const [isAutoSaving, setIsAutoSaving] = useState(false);\n  const [deploymentStatus, setDeploymentStatus] = useState<string>('draft');\n  const [workflowId, setWorkflowId] = useState<string | null>(null);\n  const [isDeploying, setIsDeploying] = useState(false);\n  const [deploymentError, setDeploymentError] = useState<string | null>(null);\n  const [alConfig, setAlConfig] = useState<ALConfiguration>({\n    queryStrategy: 'uncertainty_sampling',\n    modelConfig: {\n      model_type: 'neural_network',\n      layers: [64, 32],\n      learning_rate: 0.001,\n      batch_size: 32\n    },\n    labelingBudget: 100,\n    maxIterations: 10,\n    isFederated: false,\n    contributors: [],\n    validationSplit: 0.2\n  });\n\n  const autoSaveTimeoutRef = useRef<number>();\n\n  // Load or create CWL workflow\n  useEffect(() => {\n    loadOrCreateCWL();\n    \n    // Listen for auto-save events\n    const handleAutoSave = (event: CustomEvent) => {\n      if (event.detail.projectId === projectId) {\n        setLastAutoSave(event.detail.timestamp);\n        setIsAutoSaving(false);\n      }\n    };\n\n    window.addEventListener('dvre-cwl-saved', handleAutoSave as EventListener);\n    \n    return () => {\n      window.removeEventListener('dvre-cwl-saved', handleAutoSave as EventListener);\n      if (autoSaveTimeoutRef.current) {\n        clearTimeout(autoSaveTimeoutRef.current);\n      }\n    };\n  }, [projectId]);\n\n  // Set up auto-save when CWL changes\n  useEffect(() => {\n    if (cwlWorkflow && !readOnly) {\n      // Clear existing timeout\n      if (autoSaveTimeoutRef.current) {\n        clearTimeout(autoSaveTimeoutRef.current);\n      }\n\n      // Set new timeout for auto-save\n      autoSaveTimeoutRef.current = setTimeout(() => {\n        setIsAutoSaving(true);\n        cwlManager.autoSave(projectId, cwlWorkflow);\n      }, 2000); // Auto-save after 2 seconds of inactivity\n    }\n  }, [cwlWorkflow, projectId, readOnly]);\n\n  const loadOrCreateCWL = useCallback(() => {\n    try {\n      const existingCWL = cwlManager.loadCWL(projectId);\n      if (existingCWL) {\n        setCwlWorkflow(existingCWL.cwl);\n        setMetadata(existingCWL.metadata);\n        setDeploymentStatus(existingCWL.metadata.status);\n        setWorkflowId(existingCWL.metadata.workflowId || null);\n        \n        // Load AL config if available\n        if (existingCWL.metadata.alConfig) {\n          setAlConfig(existingCWL.metadata.alConfig);\n        }\n      } else {\n        // Create new CWL from template\n        createFromTemplate();\n      }\n    } catch (error: any) {\n      if (error.message.includes('Access denied')) {\n        setReadOnly(true);\n        // Try to load read-only version\n        const storage = JSON.parse(localStorage.getItem('dvre-project-cwls') || '{}');\n        const cwlData = storage[projectId];\n        if (cwlData) {\n          setCwlWorkflow(cwlData.cwl);\n          setMetadata(cwlData.metadata);\n          setDeploymentStatus(cwlData.metadata.status);\n        }\n      }\n    }\n  }, [projectId]);\n\n  const createFromTemplate = useCallback(() => {\n    const template = cwlManager.createALTemplate(projectId, projectTitle, alConfig);\n    setCwlWorkflow(template);\n    setDeploymentStatus('draft');\n    \n    // Save initial template\n    cwlManager.saveCWL(projectId, template, {\n      projectTitle: projectTitle,\n      alConfig: alConfig\n    });\n  }, [projectId, projectTitle, alConfig]);\n\n  const updateALConfiguration = useCallback((newConfig: ALConfiguration) => {\n    setAlConfig(newConfig);\n    \n    if (cwlWorkflow && !readOnly) {\n      cwlManager.updateALConfiguration(projectId, newConfig);\n      \n      // Update local CWL with new configuration\n      const updatedCWL = { ...cwlWorkflow };\n      updatedCWL.inputs.query_strategy.default = newConfig.queryStrategy;\n      updatedCWL.inputs.model_config.default = JSON.stringify(newConfig.modelConfig);\n      updatedCWL.inputs.labeling_budget.default = newConfig.labelingBudget;\n      updatedCWL.inputs.max_iterations.default = newConfig.maxIterations;\n      \n      setCwlWorkflow(updatedCWL);\n    }\n  }, [cwlWorkflow, projectId, readOnly]);\n\n  const deployWorkflow = useCallback(async () => {\n    if (!cwlWorkflow) return;\n\n    try {\n      setIsDeploying(true);\n      setDeploymentError(null);\n\n      // Finalize CWL locally\n      const success = cwlManager.finalizeCWL(projectId);\n      if (!success) throw new Error('Failed to finalize CWL');\n\n      // Create submission data\n      const submissionData = orchestrationAPI.createSubmissionData(\n        projectId,\n        projectTitle,\n        cwlWorkflow,\n        alConfig,\n        {}, // additional inputs\n        metadata?.creator || 'anonymous'\n      );\n\n      // Submit to orchestration server\n      const response = await orchestrationAPI.submitProjectWorkflow(submissionData);\n\n      // Update local status\n      cwlManager.markAsDeployed(projectId, response.workflow_id);\n\n      setDeploymentStatus('deployed');\n      setWorkflowId(response.workflow_id);\n\n      if (onWorkflowDeployed) {\n        onWorkflowDeployed(response.workflow_id);\n      }\n\n    } catch (error: any) {\n      console.error('Deployment failed:', error);\n      setDeploymentError(error.message);\n    } finally {\n      setIsDeploying(false);\n    }\n  }, [cwlWorkflow, projectId, projectTitle, alConfig, metadata, onWorkflowDeployed]);\n\n  if (readOnly) {\n    return (\n      <div className=\"cwl-workflow-editor read-only\">\n        <div className=\"editor-header\">\n          <h2>CWL Workflow - Read Only</h2>\n          <p>Only the project creator can edit the CWL workflow</p>\n          {onClose && (\n            <button onClick={onClose} className=\"close-button\">Close</button>\n          )}\n        </div>\n        \n        {cwlWorkflow && (\n          <CWLCodeEditor\n            cwl={cwlWorkflow}\n            onChange={() => {}} // No-op for read-only\n            disabled={true}\n          />\n        )}\n      </div>\n    );\n  }\n\n  const canDeploy = cwlWorkflow && cwlManager.validateCWL(cwlWorkflow) && deploymentStatus !== 'deployed';\n\n  return (\n    <div className=\"cwl-workflow-editor\">\n      <div className=\"editor-header\">\n        <h2>CWL Workflow Editor - {projectTitle}</h2>\n        <AutoSaveIndicator lastSaved={lastAutoSave} isAutoSaving={isAutoSaving} />\n        {onClose && (\n          <button onClick={onClose} className=\"close-button\">Close</button>\n        )}\n      </div>\n\n      <div className=\"editor-content\">\n        <div className=\"left-panel\">\n          <ALConfigurationPanel\n            config={alConfig}\n            onChange={updateALConfiguration}\n            disabled={deploymentStatus === 'deployed'}\n          />\n          \n          {cwlWorkflow && (\n            <WorkflowValidationPanel cwl={cwlWorkflow} />\n          )}\n        </div>\n\n        <div className=\"right-panel\">\n          {cwlWorkflow && (\n            <CWLCodeEditor\n              cwl={cwlWorkflow}\n              onChange={setCwlWorkflow}\n              disabled={deploymentStatus === 'deployed'}\n            />\n          )}\n          \n          <DeploymentPanel\n            onDeploy={deployWorkflow}\n            status={deploymentStatus}\n            workflowId={workflowId}\n            canDeploy={!!canDeploy}\n            isDeploying={isDeploying}\n            error={deploymentError}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}; ","import React, { useState, useCallback, useEffect } from 'react';\nimport { CWLWorkflowEditor } from './CWLWorkflowEditor';\nimport { RuntimeOrchestrationPanel } from './RuntimeOrchestrationPanel';\nimport { cwlManager } from './CWLManager';\nimport { orchestrationAPI } from './OrchestrationAPI';\n\ninterface DALProject {\n  id: string;\n  name: string;\n  contractAddress: string;\n  status: 'active' | 'training' | 'completed';\n  participants: number;\n  accuracy: number;\n  currentRound: number;\n  totalRounds: number;\n  lastUpdated: Date;\n  cwlStatus?: string; // Track CWL workflow status\n  workflowId?: string; // Store deployed workflow ID for Phase 2\n  phase?: 'configuration' | 'runtime' | 'completed'; // Track project phase\n}\n\ninterface DALComponentProps {\n  title?: string;\n}\n\nconst DALComponent: React.FC<DALComponentProps> = ({ \n  title = 'Decentralized Active Learning' \n}) => {\n  const [projects, setProjects] = useState<DALProject[]>([]);\n  const [selectedProject, setSelectedProject] = useState<DALProject | null>(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [showCWLEditor, setShowCWLEditor] = useState(false);\n  const [showRuntimePanel, setShowRuntimePanel] = useState(false);\n  const [serverHealthy, setServerHealthy] = useState(false);\n\n  // Simplified auth state - in a real implementation, this would connect to the auth system\n  const [account, setAccount] = useState<string | null>(null);\n\n  useEffect(() => {\n    // Simulate initial data loading\n    loadProjects();\n    checkServerHealth();\n  }, []);\n\n  const checkServerHealth = useCallback(async () => {\n    try {\n      const healthy = await orchestrationAPI.checkServerHealth();\n      setServerHealthy(healthy);\n    } catch (error) {\n      setServerHealthy(false);\n    }\n  }, []);\n\n  const loadProjects = useCallback(async () => {\n    setLoading(true);\n    try {\n      // Simulate loading projects from blockchain/backend\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      const mockProjects: DALProject[] = [\n        {\n          id: '1',\n          name: 'Medical Image Classification',\n          contractAddress: '0x1234...5678',\n          status: 'active',\n          participants: 5,\n          accuracy: 0.87,\n          currentRound: 3,\n          totalRounds: 10,\n          lastUpdated: new Date(),\n          cwlStatus: cwlManager.getStatus('1'),\n          workflowId: localStorage.getItem('project-1-workflow-id') || undefined,\n          phase: localStorage.getItem('project-1-workflow-id') ? 'runtime' : 'configuration'\n        },\n        {\n          id: '2', \n          name: 'Text Sentiment Analysis',\n          contractAddress: '0xabcd...efgh',\n          status: 'training',\n          participants: 8,\n          accuracy: 0.92,\n          currentRound: 7,\n          totalRounds: 15,\n          lastUpdated: new Date(),\n          cwlStatus: cwlManager.getStatus('2'),\n          workflowId: localStorage.getItem('project-2-workflow-id') || undefined,\n          phase: localStorage.getItem('project-2-workflow-id') ? 'runtime' : 'configuration'\n        }\n      ];\n      \n      setProjects(mockProjects);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load projects');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const connectWallet = useCallback(async () => {\n    try {\n      if (typeof window !== 'undefined' && (window as any).ethereum) {\n        setLoading(true);\n        // Simulate wallet connection\n        await new Promise(resolve => setTimeout(resolve, 500));\n        setAccount('0x1234567890abcdef');\n        setIsConnected(true);\n        \n        // Set user ID for CWL manager\n        localStorage.setItem('dvre-user-id', '0x1234567890abcdef');\n      } else {\n        setError('MetaMask not found. Please install MetaMask to continue.');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to connect wallet');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const startTraining = useCallback(async (projectId: string) => {\n    setLoading(true);\n    try {\n      // Simulate starting training\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      setProjects(prev => prev.map(p => \n        p.id === projectId \n          ? { ...p, status: 'training' as const }\n          : p\n      ));\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to start training');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Phase 1: Configuration\n  const openCWLEditor = useCallback((project: DALProject) => {\n    setSelectedProject(project);\n    setShowCWLEditor(true);\n  }, []);\n\n  const closeCWLEditor = useCallback(() => {\n    setShowCWLEditor(false);\n    setSelectedProject(null);\n    // Refresh project list to update CWL status\n    loadProjects();\n  }, [loadProjects]);\n\n  const handleWorkflowDeployed = useCallback((workflowId: string) => {\n    if (selectedProject) {\n      // Store workflow ID and update project phase\n      localStorage.setItem(`project-${selectedProject.id}-workflow-id`, workflowId);\n      \n      // Update project status\n      setProjects(prev => prev.map(p => \n        p.id === selectedProject.id \n          ? { \n              ...p, \n              cwlStatus: 'deployed',\n              workflowId: workflowId,\n              phase: 'runtime' as const\n            }\n          : p\n      ));\n    }\n    \n    // Show success message\n    alert(`Workflow deployed successfully! Project ready for runtime orchestration. Workflow ID: ${workflowId}`);\n  }, [selectedProject]);\n\n  // Phase 2: Runtime Orchestration\n  const openRuntimePanel = useCallback((project: DALProject) => {\n    if (!project.workflowId) {\n      setError('No workflow deployed for this project. Please deploy a CWL workflow first.');\n      return;\n    }\n    \n    setSelectedProject(project);\n    setShowRuntimePanel(true);\n  }, []);\n\n  const closeRuntimePanel = useCallback(() => {\n    setShowRuntimePanel(false);\n    setSelectedProject(null);\n    // Refresh project list\n    loadProjects();\n  }, [loadProjects]);\n\n  const getCWLStatusDisplay = (status: string) => {\n    switch (status) {\n      case 'draft': return '📝 Draft';\n      case 'finalized': return '✅ Ready';\n      case 'deployed': return '🚀 Deployed';\n      case 'none': \n      default: return '❌ Not configured';\n    }\n  };\n\n  const getPhaseDisplay = (phase: string, cwlStatus: string) => {\n    if (phase === 'runtime' && cwlStatus === 'deployed') {\n      return '🔄 Phase 2: Runtime';\n    } else {\n      return '⚙️ Phase 1: Configuration';\n    }\n  };\n\n  if (showCWLEditor && selectedProject) {\n    return (\n      <CWLWorkflowEditor\n        projectId={selectedProject.id}\n        projectTitle={selectedProject.name}\n        onClose={closeCWLEditor}\n        onWorkflowDeployed={handleWorkflowDeployed}\n      />\n    );\n  }\n\n  if (showRuntimePanel && selectedProject && selectedProject.workflowId) {\n    return (\n      <RuntimeOrchestrationPanel\n        projectId={selectedProject.id}\n        workflowId={selectedProject.workflowId}\n        projectTitle={selectedProject.name}\n        onClose={closeRuntimePanel}\n      />\n    );\n  }\n\n  return (\n    <div className=\"dal-container\">\n      <div className=\"dal-header\">\n        <h1>{title}</h1>\n        \n        <div className=\"connection-status\">\n          <div className={`status-indicator ${isConnected ? 'connected' : 'disconnected'}`}>\n            {isConnected ? 'Connected' : 'Disconnected'}\n          </div>\n          \n          <div className={`server-status ${serverHealthy ? 'healthy' : 'unhealthy'}`}>\n            Orchestration Server: {serverHealthy ? 'Online' : 'Offline'}\n          </div>\n          \n          {!isConnected && (\n            <button \n              onClick={connectWallet}\n              className=\"connect-button\"\n              disabled={loading}\n            >\n              {loading ? 'Connecting...' : 'Connect Wallet'}\n            </button>\n          )}\n          \n          {account && (\n            <div className=\"account-info\">\n              Account: {account.slice(0, 6)}...{account.slice(-4)}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          <span>{error}</span>\n          <button onClick={() => setError(null)}>✕</button>\n        </div>\n      )}\n\n      {loading && (\n        <div className=\"loading-indicator\">\n          <div className=\"spinner\"></div>\n          Loading...\n        </div>\n      )}\n\n      <div className=\"projects-section\">\n        <div className=\"section-header\">\n          <h2>Active Learning Projects</h2>\n          <button \n            onClick={loadProjects}\n            className=\"refresh-button\"\n            disabled={loading}\n          >\n            Refresh\n          </button>\n        </div>\n\n        {projects.length === 0 ? (\n          <div className=\"empty-state\">\n            <p>No projects found. Create a new project to get started.</p>\n          </div>\n        ) : (\n          <div className=\"projects-grid\">\n            {projects.map(project => (\n              <div key={project.id} className=\"project-card\">\n                <div className=\"project-header\">\n                  <h3>{project.name}</h3>\n                  <span className={`status-badge ${project.status}`}>\n                    {project.status}\n                  </span>\n                </div>\n                \n                <div className=\"project-details\">\n                  <div className=\"detail-row\">\n                    <span>Contract:</span>\n                    <code>{project.contractAddress}</code>\n                  </div>\n                  \n                  <div className=\"detail-row\">\n                    <span>Participants:</span>\n                    <span>{project.participants}</span>\n                  </div>\n                  \n                  <div className=\"detail-row\">\n                    <span>Accuracy:</span>\n                    <span>{(project.accuracy * 100).toFixed(1)}%</span>\n                  </div>\n                  \n                  <div className=\"detail-row\">\n                    <span>Progress:</span>\n                    <span>{project.currentRound}/{project.totalRounds} rounds</span>\n                  </div>\n                  \n                  <div className=\"detail-row\">\n                    <span>Phase:</span>\n                    <span className=\"phase-status\">\n                      {getPhaseDisplay(project.phase || 'configuration', project.cwlStatus || 'none')}\n                    </span>\n                  </div>\n                  \n                  <div className=\"detail-row\">\n                    <span>CWL Workflow:</span>\n                    <span className=\"cwl-status\">\n                      {getCWLStatusDisplay(project.cwlStatus || 'none')}\n                    </span>\n                  </div>\n                  \n                  {project.workflowId && (\n                    <div className=\"detail-row\">\n                      <span>Workflow ID:</span>\n                      <code>{project.workflowId.slice(0, 8)}...</code>\n                    </div>\n                  )}\n                  \n                  <div className=\"detail-row\">\n                    <span>Last Updated:</span>\n                    <span>{project.lastUpdated.toLocaleDateString()}</span>\n                  </div>\n                </div>\n\n                <div className=\"progress-bar\">\n                  <div \n                    className=\"progress-fill\"\n                    style={{ \n                      width: `${(project.currentRound / project.totalRounds) * 100}%` \n                    }}\n                  ></div>\n                </div>\n\n                <div className=\"project-actions\">\n                  {/* Phase 1: Configuration Actions */}\n                  {(!project.phase || project.phase === 'configuration') && (\n                    <button\n                      onClick={() => openCWLEditor(project)}\n                      className=\"action-button secondary\"\n                      title=\"Phase 1: Configure CWL Workflow\"\n                    >\n                      ⚙️ Configure Workflow\n                    </button>\n                  )}\n                  \n                  {/* Phase 2: Runtime Actions */}\n                  {project.phase === 'runtime' && project.workflowId && (\n                    <button\n                      onClick={() => openRuntimePanel(project)}\n                      className=\"action-button primary\"\n                      title=\"Phase 2: Runtime Orchestration\"\n                    >\n                      🔄 Runtime Control\n                    </button>\n                  )}\n                  \n                  {/* Legacy training button (can be used alongside runtime) */}\n                  <button\n                    onClick={() => startTraining(project.id)}\n                    disabled={loading || project.status === 'training'}\n                    className=\"action-button secondary\"\n                  >\n                    {project.status === 'training' ? 'Training...' : 'Start Training'}\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {isConnected && (\n        <div className=\"actions-section\">\n          <h2>Project Actions</h2>\n          \n          <div className=\"action-cards\">\n            <div className=\"action-card\">\n              <h3>Create New Project</h3>\n              <p>Set up a new active learning project with custom datasets and models.</p>\n              <button className=\"action-button primary\">\n                Create Project\n              </button>\n            </div>\n            \n            <div className=\"action-card\">\n              <h3>Join Existing Project</h3>\n              <p>Contribute to an existing federated learning project.</p>\n              <button className=\"action-button secondary\">\n                Join Project\n              </button>\n            </div>\n            \n            <div className=\"action-card\">\n              <h3>Manage Data</h3>\n              <p>Upload datasets and manage your contributions.</p>\n              <button className=\"action-button secondary\">\n                Manage Data\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"help-section\">\n        <h2>Two-Phase Active Learning Workflow</h2>\n        <div className=\"help-content\">\n          <div className=\"help-step\">\n            <div className=\"step-number\">1</div>\n            <div className=\"step-content\">\n              <h4>Phase 1: Configuration & Setup</h4>\n              <p>Configure CWL workflows, deploy smart contracts, set up AL scenarios, and upload resources to IPFS. This phase finalizes all project settings.</p>\n            </div>\n          </div>\n          \n          <div className=\"help-step\">\n            <div className=\"step-number\">2</div>\n            <div className=\"step-content\">\n              <h4>Phase 2: Runtime Orchestration</h4>\n              <p>Execute active learning sessions with real-time querying, training coordination, voting management, and result aggregation through the AL-engine.</p>\n            </div>\n          </div>\n          \n          <div className=\"help-step\">\n            <div className=\"step-number\">3</div>\n            <div className=\"step-content\">\n              <h4>Interactive Control</h4>\n              <p>Use runtime controls to start/continue querying, prompt training, submit new labels, and manage the active learning lifecycle.</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DALComponent; ","import { ReactWidget } from '@jupyterlab/ui-components';\nimport React from 'react';\nimport DALComponent from './DALComponent';\n\nexport class DALWidget extends ReactWidget {\n  private _title: string;\n\n  constructor(title: string = 'Decentralized Active Learning') {\n    super();\n    this._title = title;\n    this.addClass('dvre-widget');\n    this.addClass('dvre-dal-widget');\n    this.title.label = title;\n    this.title.closable = true;\n  }\n\n  render(): JSX.Element {\n    return <DALComponent title={this._title} />;\n  }\n} ","/**\n * Orchestration API Client for DVRE DAL Extension\n * Handles communication with the DVRE Orchestration Server\n */\n\nimport { CWLWorkflow, ALConfiguration } from './CWLManager';\n\nexport interface WorkflowSubmissionData {\n  project_id: string;\n  cwl_workflow: string | CWLWorkflow;\n  inputs: Record<string, any>;\n  metadata: {\n    creator: string;\n    project_title: string;\n    al_config?: ALConfiguration;\n    contributors?: string[];\n    [key: string]: any;\n  };\n}\n\nexport interface WorkflowStatus {\n  workflow_id: string;\n  project_id?: string;\n  status: 'PENDING' | 'RUNNING' | 'COMPLETED' | 'FAILED';\n  created_at: string;\n  started_at?: string;\n  completed_at?: string;\n  output?: string;\n  error?: string;\n  metadata?: Record<string, any>;\n}\n\nexport interface WorkflowListResponse {\n  workflows: WorkflowStatus[];\n  total_count?: number;\n}\n\nexport interface ProjectWorkflowsResponse {\n  project_id: string;\n  workflows: WorkflowStatus[];\n  total_count: number;\n}\n\n// Runtime orchestration interfaces for AL-engine communication\nexport interface ALEngineCommand {\n  command_type: 'start_querying' | 'continue_querying' | 'prompt_training' | 'submit_labels' | 'terminate_project';\n  project_id: string;\n  workflow_id: string;\n  parameters?: Record<string, any>;\n  timestamp: string;\n}\n\nexport interface ALEngineResponse {\n  command_id: string;\n  status: 'accepted' | 'rejected' | 'completed' | 'failed';\n  message?: string;\n  data?: Record<string, any>;\n  timestamp: string;\n}\n\nexport interface QueryingSession {\n  session_id: string;\n  project_id: string;\n  workflow_id: string;\n  status: 'active' | 'waiting_for_labels' | 'training' | 'completed';\n  current_round: number;\n  total_rounds: number;\n  queried_samples: any[];\n  accuracy_metrics?: Record<string, number>;\n}\n\nexport class OrchestrationAPI {\n  private baseUrl: string;\n  private defaultTimeout: number = 30000; // 30 seconds\n\n  constructor(baseUrl: string = 'http://145.100.135.97:8888') {\n    this.baseUrl = baseUrl.replace(/\\/$/, ''); // Remove trailing slash\n  }\n\n  /**\n   * Submit a project workflow to the orchestration server (Phase 1)\n   */\n  async submitProjectWorkflow(data: WorkflowSubmissionData): Promise<{\n    workflow_id: string;\n    project_id: string;\n    status: string;\n    message: string;\n  }> {\n    const response = await this.makeRequest('/streamflow/submit-project-workflow', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n      throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Submit a basic workflow (backward compatibility)\n   */\n  async submitWorkflow(cwlWorkflow: string, inputs: Record<string, any> = {}): Promise<{\n    workflow_id: string;\n    status: string;\n  }> {\n    const response = await this.makeRequest('/streamflow/submit', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        cwl_workflow: cwlWorkflow,\n        inputs: inputs\n      }),\n    });\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n      throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Get workflow status by ID\n   */\n  async getWorkflowStatus(workflowId: string): Promise<WorkflowStatus> {\n    const response = await this.makeRequest(`/streamflow/status/${workflowId}`);\n\n    if (!response.ok) {\n      if (response.status === 404) {\n        throw new Error('Workflow not found');\n      }\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n      throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * List all workflows, optionally filtered by project\n   */\n  async listWorkflows(projectId?: string): Promise<WorkflowListResponse> {\n    const url = projectId \n      ? `/streamflow/workflows?project_id=${encodeURIComponent(projectId)}`\n      : '/streamflow/workflows';\n      \n    const response = await this.makeRequest(url);\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n      throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Get all workflows for a specific project\n   */\n  async getProjectWorkflows(projectId: string): Promise<ProjectWorkflowsResponse> {\n    const response = await this.makeRequest(`/streamflow/projects/${encodeURIComponent(projectId)}/workflows`);\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n      throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  // Phase 2: Runtime Orchestration Methods for AL-engine interaction\n\n  /**\n   * Start a new querying session (Phase 2)\n   */\n  async startQuerying(projectId: string, workflowId: string, parameters: {\n    query_count?: number;\n    strategy_override?: string;\n  } = {}): Promise<ALEngineResponse> {\n    const command: ALEngineCommand = {\n      command_type: 'start_querying',\n      project_id: projectId,\n      workflow_id: workflowId,\n      parameters: parameters,\n      timestamp: new Date().toISOString()\n    };\n\n    const response = await this.makeRequest('/al-engine/command', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(command),\n    });\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n      throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Continue querying in an existing session\n   */\n  async continueQuerying(projectId: string, workflowId: string, sessionId: string): Promise<ALEngineResponse> {\n    const command: ALEngineCommand = {\n      command_type: 'continue_querying',\n      project_id: projectId,\n      workflow_id: workflowId,\n      parameters: { session_id: sessionId },\n      timestamp: new Date().toISOString()\n    };\n\n    const response = await this.makeRequest('/al-engine/command', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(command),\n    });\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n      throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Prompt training with current labeled data\n   */\n  async promptTraining(projectId: string, workflowId: string, parameters: {\n    session_id: string;\n    training_config?: Record<string, any>;\n  }): Promise<ALEngineResponse> {\n    const command: ALEngineCommand = {\n      command_type: 'prompt_training',\n      project_id: projectId,\n      workflow_id: workflowId,\n      parameters: parameters,\n      timestamp: new Date().toISOString()\n    };\n\n    const response = await this.makeRequest('/al-engine/command', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(command),\n    });\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n      throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Submit new labels for queried samples\n   */\n  async submitLabels(projectId: string, workflowId: string, labels: {\n    session_id: string;\n    labeled_samples: Array<{\n      sample_id: string;\n      label: any;\n      confidence?: number;\n      contributor?: string;\n    }>;\n  }): Promise<ALEngineResponse> {\n    const command: ALEngineCommand = {\n      command_type: 'submit_labels',\n      project_id: projectId,\n      workflow_id: workflowId,\n      parameters: labels,\n      timestamp: new Date().toISOString()\n    };\n\n    const response = await this.makeRequest('/al-engine/command', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(command),\n    });\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n      throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Get current querying session status\n   */\n  async getQueryingSession(projectId: string, sessionId: string): Promise<QueryingSession> {\n    const response = await this.makeRequest(\n      `/al-engine/sessions/${encodeURIComponent(projectId)}/${encodeURIComponent(sessionId)}`\n    );\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n      throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * List all active querying sessions for a project\n   */\n  async listQueryingSessions(projectId: string): Promise<QueryingSession[]> {\n    const response = await this.makeRequest(`/al-engine/sessions/${encodeURIComponent(projectId)}`);\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n      throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    const data = await response.json();\n    return data.sessions || [];\n  }\n\n  /**\n   * Terminate a project and clean up resources\n   */\n  async terminateProject(projectId: string, workflowId: string): Promise<ALEngineResponse> {\n    const command: ALEngineCommand = {\n      command_type: 'terminate_project',\n      project_id: projectId,\n      workflow_id: workflowId,\n      parameters: {},\n      timestamp: new Date().toISOString()\n    };\n\n    const response = await this.makeRequest('/al-engine/command', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(command),\n    });\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\n      throw new Error(error.error || `HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Check if orchestration server is available\n   */\n  async checkServerHealth(): Promise<boolean> {\n    try {\n      const response = await this.makeRequest('/', { timeout: 5000 });\n      return response.ok;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Get server information and API documentation\n   */\n  async getServerInfo(): Promise<any> {\n    const response = await this.makeRequest('/');\n\n    if (!response.ok) {\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Poll workflow status until completion\n   */\n  async pollWorkflowUntilComplete(\n    workflowId: string, \n    intervalMs: number = 2000,\n    maxAttempts: number = 150 // 5 minutes at 2-second intervals\n  ): Promise<WorkflowStatus> {\n    let attempts = 0;\n\n    return new Promise((resolve, reject) => {\n      const poll = async () => {\n        try {\n          attempts++;\n          const status = await this.getWorkflowStatus(workflowId);\n\n          if (status.status === 'COMPLETED' || status.status === 'FAILED') {\n            resolve(status);\n            return;\n          }\n\n          if (attempts >= maxAttempts) {\n            reject(new Error(`Workflow polling timeout after ${maxAttempts} attempts`));\n            return;\n          }\n\n          // Continue polling\n          setTimeout(poll, intervalMs);\n        } catch (error) {\n          reject(error);\n        }\n      };\n\n      // Start polling\n      poll();\n    });\n  }\n\n  /**\n   * Create a workflow submission from CWL and configuration (Phase 1)\n   */\n  createSubmissionData(\n    projectId: string,\n    projectTitle: string,\n    cwlWorkflow: CWLWorkflow,\n    alConfig: ALConfiguration,\n    inputs: Record<string, any> = {},\n    creator: string = 'anonymous'\n  ): WorkflowSubmissionData {\n    return {\n      project_id: projectId,\n      cwl_workflow: cwlWorkflow,\n      inputs: {\n        dataset: inputs.dataset || 'default_dataset.csv',\n        query_strategy: alConfig.queryStrategy,\n        model_config: JSON.stringify(alConfig.modelConfig),\n        labeling_budget: alConfig.labelingBudget,\n        max_iterations: alConfig.maxIterations,\n        validation_split: alConfig.validationSplit || 0.2,\n        ...inputs\n      },\n      metadata: {\n        creator: creator,\n        project_title: projectTitle,\n        al_config: alConfig,\n        contributors: alConfig.contributors,\n        // Phase 1 metadata\n        configuration_phase: 'finalized',\n        smart_contract_address: inputs.smart_contract_address,\n        ipfs_dataset_hash: inputs.ipfs_dataset_hash,\n        ipfs_model_hash: inputs.ipfs_model_hash\n      }\n    };\n  }\n\n  /**\n   * Validate workflow inputs before submission\n   */\n  validateInputs(cwlWorkflow: CWLWorkflow, inputs: Record<string, any>): {\n    valid: boolean;\n    errors: string[];\n    warnings: string[];\n  } {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    if (!cwlWorkflow.inputs) {\n      errors.push('CWL workflow has no inputs defined');\n      return { valid: false, errors, warnings };\n    }\n\n    // Check required inputs\n    for (const [inputName, inputDef] of Object.entries(cwlWorkflow.inputs)) {\n      const hasDefault = inputDef.default !== undefined;\n      const hasValue = inputs[inputName] !== undefined;\n\n      if (!hasDefault && !hasValue) {\n        errors.push(`Required input '${inputName}' is missing`);\n      }\n\n      // Type checking (basic)\n      if (hasValue) {\n        const expectedType = inputDef.type;\n        const actualValue = inputs[inputName];\n\n        if (expectedType === 'int' && !Number.isInteger(actualValue)) {\n          errors.push(`Input '${inputName}' should be an integer`);\n        } else if (expectedType === 'float' && typeof actualValue !== 'number') {\n          errors.push(`Input '${inputName}' should be a number`);\n        } else if (expectedType === 'string' && typeof actualValue !== 'string') {\n          errors.push(`Input '${inputName}' should be a string`);\n        }\n      }\n    }\n\n    // Check for extra inputs\n    for (const inputName of Object.keys(inputs)) {\n      if (!cwlWorkflow.inputs[inputName]) {\n        warnings.push(`Input '${inputName}' is not defined in the CWL workflow`);\n      }\n    }\n\n    return {\n      valid: errors.length === 0,\n      errors,\n      warnings\n    };\n  }\n\n  // Private methods\n\n  private async makeRequest(endpoint: string, options: RequestInit & { timeout?: number } = {}): Promise<Response> {\n    const { timeout = this.defaultTimeout, ...fetchOptions } = options;\n    const url = `${this.baseUrl}${endpoint}`;\n\n    // Create abort controller for timeout\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeout);\n\n    try {\n      const response = await fetch(url, {\n        ...fetchOptions,\n        signal: controller.signal\n      });\n      \n      clearTimeout(timeoutId);\n      return response;\n    } catch (error) {\n      clearTimeout(timeoutId);\n      \n      if (error.name === 'AbortError') {\n        throw new Error(`Request timeout after ${timeout}ms`);\n      }\n      \n      throw error;\n    }\n  }\n}\n\n// Export singleton instance with remote VM configuration\nexport const orchestrationAPI = new OrchestrationAPI(); ","import React, { useState, useEffect, useCallback } from 'react';\nimport { orchestrationAPI, QueryingSession, ALEngineResponse } from './OrchestrationAPI';\n\ninterface RuntimeOrchestrationPanelProps {\n  projectId: string;\n  workflowId: string;\n  projectTitle: string;\n  onClose?: () => void;\n}\n\ninterface SessionControlsProps {\n  session: QueryingSession;\n  onStartQuerying: () => void;\n  onContinueQuerying: () => void;\n  onPromptTraining: () => void;\n  onSubmitLabels: (labels: any[]) => void;\n  onTerminateProject: () => void;\n  isLoading: boolean;\n}\n\nconst SessionControls: React.FC<SessionControlsProps> = ({\n  session,\n  onStartQuerying,\n  onContinueQuerying,\n  onPromptTraining,\n  onSubmitLabels,\n  onTerminateProject,\n  isLoading\n}) => {\n  const [labelingMode, setLabelingMode] = useState(false);\n  const [labels, setLabels] = useState<Array<{ sample_id: string; label: string; confidence: number }>>([]);\n\n  const handleSubmitLabels = () => {\n    if (labels.length > 0) {\n      onSubmitLabels(labels);\n      setLabels([]);\n      setLabelingMode(false);\n    }\n  };\n\n  const addLabel = (sampleId: string) => {\n    const label = prompt(`Enter label for sample ${sampleId}:`);\n    if (label) {\n      const confidence = parseFloat(prompt('Enter confidence (0-1):') || '1.0');\n      setLabels(prev => [...prev, { sample_id: sampleId, label, confidence }]);\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'active': return 'var(--jp-success-color1)';\n      case 'waiting_for_labels': return 'var(--jp-warn-color1)';\n      case 'training': return 'var(--jp-info-color1)';\n      case 'completed': return 'var(--jp-layout-color3)';\n      default: return 'var(--jp-ui-font-color2)';\n    }\n  };\n\n  return (\n    <div className=\"session-controls\">\n      <div className=\"session-header\">\n        <h4>Session: {session.session_id.slice(0, 8)}...</h4>\n        <span \n          className=\"session-status\"\n          style={{ color: getStatusColor(session.status) }}\n        >\n          {session.status.toUpperCase()}\n        </span>\n      </div>\n\n      <div className=\"session-info\">\n        <div className=\"info-row\">\n          <span>Round:</span>\n          <span>{session.current_round} / {session.total_rounds}</span>\n        </div>\n        {session.accuracy_metrics?.accuracy && (\n          <div className=\"info-row\">\n            <span>Accuracy:</span>\n            <span>{(session.accuracy_metrics.accuracy * 100).toFixed(1)}%</span>\n          </div>\n        )}\n        <div className=\"info-row\">\n          <span>Queried Samples:</span>\n          <span>{session.queried_samples?.length || 0}</span>\n        </div>\n      </div>\n\n      <div className=\"session-actions\">\n        {session.status === 'active' && (\n          <button\n            onClick={onContinueQuerying}\n            disabled={isLoading}\n            className=\"action-btn primary\"\n          >\n            Continue Querying\n          </button>\n        )}\n\n        {session.status === 'waiting_for_labels' && (\n          <>\n            <button\n              onClick={() => setLabelingMode(!labelingMode)}\n              className=\"action-btn secondary\"\n            >\n              {labelingMode ? 'Cancel Labeling' : 'Label Samples'}\n            </button>\n            \n            {labelingMode && (\n              <div className=\"labeling-section\">\n                <h5>Queried Samples ({session.queried_samples?.length || 0})</h5>\n                <div className=\"samples-list\">\n                  {session.queried_samples?.slice(0, 5).map((sample: any) => (\n                    <div key={sample.sample_id} className=\"sample-item\">\n                      <span className=\"sample-id\">{sample.sample_id}</span>\n                      <span className=\"sample-uncertainty\">\n                        Uncertainty: {sample.uncertainty?.toFixed(3)}\n                      </span>\n                      <button\n                        onClick={() => addLabel(sample.sample_id)}\n                        className=\"label-btn\"\n                      >\n                        Add Label\n                      </button>\n                    </div>\n                  ))}\n                </div>\n                \n                {labels.length > 0 && (\n                  <div className=\"labeled-samples\">\n                    <h6>Labels Added ({labels.length})</h6>\n                    {labels.map((label, idx) => (\n                      <div key={idx} className=\"labeled-item\">\n                        {label.sample_id}: {label.label} (conf: {label.confidence})\n                      </div>\n                    ))}\n                    <button\n                      onClick={handleSubmitLabels}\n                      className=\"action-btn primary\"\n                    >\n                      Submit Labels\n                    </button>\n                  </div>\n                )}\n              </div>\n            )}\n          </>\n        )}\n\n        {(session.status === 'active' || session.status === 'waiting_for_labels') && (\n          <button\n            onClick={onPromptTraining}\n            disabled={isLoading}\n            className=\"action-btn secondary\"\n          >\n            Prompt Training\n          </button>\n        )}\n      </div>\n\n      <div className=\"danger-zone\">\n        <button\n          onClick={onTerminateProject}\n          disabled={isLoading}\n          className=\"action-btn danger\"\n        >\n          Terminate Project\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport const RuntimeOrchestrationPanel: React.FC<RuntimeOrchestrationPanelProps> = ({\n  projectId,\n  workflowId,\n  projectTitle,\n  onClose\n}) => {\n  const [sessions, setSessions] = useState<QueryingSession[]>([]);\n  const [selectedSession, setSelectedSession] = useState<QueryingSession | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [commandLog, setCommandLog] = useState<ALEngineResponse[]>([]);\n\n  // Load sessions on mount\n  useEffect(() => {\n    loadSessions();\n    const interval = setInterval(loadSessions, 5000); // Refresh every 5 seconds\n    return () => clearInterval(interval);\n  }, [projectId]);\n\n  const loadSessions = useCallback(async () => {\n    try {\n      const sessionList = await orchestrationAPI.listQueryingSessions(projectId);\n      setSessions(sessionList);\n      \n      // Update selected session if it exists\n      if (selectedSession) {\n        const updated = sessionList.find(s => s.session_id === selectedSession.session_id);\n        if (updated) {\n          setSelectedSession(updated);\n        }\n      }\n    } catch (err) {\n      console.error('Failed to load sessions:', err);\n    }\n  }, [projectId, selectedSession]);\n\n  const handleCommand = useCallback(async (commandType: string, parameters: any = {}) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      let response: ALEngineResponse;\n\n      switch (commandType) {\n        case 'start_querying':\n          response = await orchestrationAPI.startQuerying(projectId, workflowId, parameters);\n          break;\n        case 'continue_querying':\n          response = await orchestrationAPI.continueQuerying(projectId, workflowId, parameters.session_id);\n          break;\n        case 'prompt_training':\n          response = await orchestrationAPI.promptTraining(projectId, workflowId, {\n            session_id: parameters.session_id,\n            training_config: parameters.training_config || {}\n          });\n          break;\n        case 'submit_labels':\n          response = await orchestrationAPI.submitLabels(projectId, workflowId, {\n            session_id: parameters.session_id,\n            labeled_samples: parameters.labeled_samples\n          });\n          break;\n        case 'terminate_project':\n          response = await orchestrationAPI.terminateProject(projectId, workflowId);\n          break;\n        default:\n          throw new Error(`Unknown command type: ${commandType}`);\n      }\n\n      setCommandLog(prev => [response, ...prev.slice(0, 9)]); // Keep last 10 commands\n      \n      // Refresh sessions after command\n      setTimeout(loadSessions, 1000);\n      \n    } catch (err: any) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [projectId, workflowId, loadSessions]);\n\n  const startNewSession = () => {\n    const queryCount = parseInt(prompt('Enter query count (default 10):') || '10');\n    const strategy = prompt('Enter query strategy (default: uncertainty_sampling):') || 'uncertainty_sampling';\n    \n    handleCommand('start_querying', {\n      query_count: queryCount,\n      strategy_override: strategy,\n      max_rounds: 10\n    });\n  };\n\n  const continueQuerying = () => {\n    if (selectedSession) {\n      handleCommand('continue_querying', { session_id: selectedSession.session_id });\n    }\n  };\n\n  const promptTraining = () => {\n    if (selectedSession) {\n      handleCommand('prompt_training', { \n        session_id: selectedSession.session_id,\n        training_config: {}\n      });\n    }\n  };\n\n  const submitLabels = (labels: any[]) => {\n    if (selectedSession) {\n      handleCommand('submit_labels', {\n        session_id: selectedSession.session_id,\n        labeled_samples: labels\n      });\n    }\n  };\n\n  const terminateProject = () => {\n    if (confirm('Are you sure you want to terminate this project? This action cannot be undone.')) {\n      handleCommand('terminate_project');\n    }\n  };\n\n  return (\n    <div className=\"runtime-orchestration-panel\">\n      <div className=\"panel-header\">\n        <h2>Runtime Orchestration - {projectTitle}</h2>\n        <div className=\"header-info\">\n          <span>Project: {projectId}</span>\n          <span>Workflow: {workflowId.slice(0, 8)}...</span>\n        </div>\n        {onClose && (\n          <button onClick={onClose} className=\"close-button\">Close</button>\n        )}\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          <span>{error}</span>\n          <button onClick={() => setError(null)}>✕</button>\n        </div>\n      )}\n\n      <div className=\"panel-content\">\n        <div className=\"left-section\">\n          <div className=\"sessions-section\">\n            <div className=\"section-header\">\n              <h3>Active Learning Sessions</h3>\n              <button\n                onClick={startNewSession}\n                disabled={loading}\n                className=\"action-btn primary\"\n              >\n                Start New Session\n              </button>\n            </div>\n\n            {sessions.length === 0 ? (\n              <div className=\"empty-state\">\n                <p>No active sessions. Start a new querying session to begin.</p>\n              </div>\n            ) : (\n              <div className=\"sessions-list\">\n                {sessions.map(session => (\n                  <div\n                    key={session.session_id}\n                    className={`session-item ${selectedSession?.session_id === session.session_id ? 'selected' : ''}`}\n                    onClick={() => setSelectedSession(session)}\n                  >\n                    <div className=\"session-summary\">\n                      <div className=\"session-title\">\n                        Session {session.session_id.slice(0, 8)}...\n                      </div>\n                      <div className=\"session-meta\">\n                        <span className={`status ${session.status}`}>\n                          {session.status}\n                        </span>\n                        <span>Round {session.current_round}/{session.total_rounds}</span>\n                      </div>\n                      {session.accuracy_metrics?.accuracy && (\n                        <div className=\"accuracy\">\n                          Accuracy: {(session.accuracy_metrics.accuracy * 100).toFixed(1)}%\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          <div className=\"command-log-section\">\n            <h3>Command Log</h3>\n            <div className=\"command-log\">\n              {commandLog.length === 0 ? (\n                <p>No commands executed yet.</p>\n              ) : (\n                commandLog.map((cmd, idx) => (\n                  <div key={idx} className={`log-entry ${cmd.status}`}>\n                    <div className=\"log-header\">\n                      <span className=\"command-id\">{cmd.command_id?.slice(0, 8)}...</span>\n                      <span className=\"timestamp\">\n                        {new Date(cmd.timestamp).toLocaleTimeString()}\n                      </span>\n                      <span className={`status ${cmd.status}`}>{cmd.status}</span>\n                    </div>\n                    <div className=\"log-message\">{cmd.message}</div>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"right-section\">\n          {selectedSession ? (\n            <SessionControls\n              session={selectedSession}\n              onStartQuerying={startNewSession}\n              onContinueQuerying={continueQuerying}\n              onPromptTraining={promptTraining}\n              onSubmitLabels={submitLabels}\n              onTerminateProject={terminateProject}\n              isLoading={loading}\n            />\n          ) : (\n            <div className=\"no-session-selected\">\n              <h3>Select a Session</h3>\n              <p>Choose an active learning session from the left panel to view controls and details.</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}; ","import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin,\n  ILabShell\n} from '@jupyterlab/application';\n\nimport { \n  ICommandPalette, \n  MainAreaWidget\n} from '@jupyterlab/apputils';\n\nimport { ILauncher } from '@jupyterlab/launcher';\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport { DALWidget } from './DALWidget';\n\n// Import CSS\nimport '../style/index.css';\n\nconst dalIcon = new LabIcon({\n  name: 'dvre-dal:icon',\n  svgstr: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><circle cx=\"8\" cy=\"8\" r=\"7\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\"/><path d=\"M8 4v8M4 8h8\" stroke=\"currentColor\" stroke-width=\"1.5\"/><path d=\"M6 6l4 4M10 6l-4 4\" stroke=\"currentColor\" stroke-width=\"1\" opacity=\"0.7\"/></svg>'\n});\n\n/**\n * The command IDs used by the extension.\n */\nnamespace CommandIDs {\n  export const open = 'dvre-dal:open';\n}\n\n/**\n * Initialization data for the jupyter-dvre-dal extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'jupyter-dvre-dal:plugin',\n  description: 'A JupyterLab extension for decentralized active learning.',\n  autoStart: true,\n  requires: [ICommandPalette],\n  optional: [ILauncher, ILabShell],\n  activate: (\n    app: JupyterFrontEnd, \n    palette: ICommandPalette, \n    launcher: ILauncher | null\n  ) => {\n    console.log('DVRE DAL extension is activated!');\n\n    // Register DAL extension with DVRE core if available\n    // Try to access the DVRE core extension through the application registry\n    const dvreCoreTokenId = '@dvre/core:IExtensionRegistry';\n    \n    // Use a more robust method to check for DVRE core\n    try {\n      // Check if DVRE core is available in app plugins\n      const plugins = (app as any)._plugins || new Map();\n      const dvreCorePlugin = plugins.get('jupyter-dvre:plugin');\n      \n      if (dvreCorePlugin) {\n        console.log('Found DVRE core plugin, registering DAL extension');\n        // Register this extension with the main DVRE extension\n        // This would need to be implemented properly with the actual DVRE core API\n      } else {\n        console.log('DVRE core not found, DAL extension running independently');\n      }\n    } catch (error) {\n      console.log('Could not register with DVRE core:', error);\n      console.log('DAL extension running independently');\n    }\n\n    // Register the command\n    const command = CommandIDs.open;\n    app.commands.addCommand(command, {\n      label: 'Open Decentralized Active Learning',\n      caption: 'Open the Decentralized Active Learning interface',\n      execute: () => {\n        // Create a new widget\n        const content = new DALWidget();\n        const widget = new MainAreaWidget<DALWidget>({ content });\n        widget.title.label = 'Decentralized Active Learning';\n        widget.title.icon = dalIcon; // Use the properly defined icon\n\n        // Add the widget to the main area\n        if (!widget.isAttached) {\n          app.shell.add(widget, 'main');\n        }\n        app.shell.activateById(widget.id);\n      }\n    });\n\n    // Add the command to the command palette\n    palette.addItem({ command, category: 'DVRE Extensions' });\n\n    // Add to launcher if available\n    if (launcher) {\n      launcher.add({\n        command,\n        category: 'DVRE Extensions',\n        rank: 1\n      });\n    }\n\n    console.log('DVRE DAL extension commands registered');\n  }\n};\n\nexport default plugin; "],"names":[],"sourceRoot":""}
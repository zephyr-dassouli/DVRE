version: v1.0

# StreamFlow configuration for DVRE Orchestration Server
# StreamFlow handles ORCHESTRATION, clients use cwltool for EXECUTION

workflows: {}  # Dynamically populated by orchestration server

deployments:
  # Server-side orchestration environment (coordination only)
  orchestration:
    type: local
    config:
      workdir: /tmp/streamflow/dvre-orchestration
      description: "Server-side orchestration and coordination only"
      env:
        DVRE_ROLE: orchestration
        EXECUTION_MODEL: server_orchestrates_client_executes

# Execution model configuration
execution_model:
  architecture: "distributed_orchestration"
  
  server_side:
    role: "orchestration_only"
    engine: "streamflow"
    responsibilities:
      - "DAL round coordination"
      - "Multi-user orchestration" 
      - "Smart contract integration"
      - "Workflow state management"
      - "Resource allocation"
      - "Session coordination"
    
  client_side:
    role: "execution_with_local_data"
    engine: "cwltool"
    responsibilities:
      - "CWL workflow execution"
      - "ML model training"
      - "Active learning queries"
      - "Local data processing"
      - "Privacy preservation"
    required_tools:
      - "cwltool"
      - "modal_run.py"
      - "dal_engine.py"
      - "python3"
    
  data_privacy:
    principle: "client_side_only"
    guarantees:
      - "No raw data leaves client"
      - "Only results/metrics shared"
      - "Local dataset processing"
      - "Privacy by design"

# DAL (Distributed Active Learning) specific configuration
dal_orchestration:
  coordination_mode: "server_coordinates_clients_execute"
  
  server_coordination:
    - "Round initiation"
    - "Sample assignment"
    - "Progress tracking"
    - "Result aggregation"
    - "Next round preparation"
    
  client_execution:
    - "Receive CWL workflows from server"
    - "Execute: cwltool dal_train_query.cwl client_inputs.json" 
    - "modal_run.py trains models with LOCAL data"
    - "Return results (not data) to server"
    - "Wait for next round coordination"

# Global settings for orchestration
settings:
  # Logging for orchestration activities
  logLevel: INFO
  
  # Temporary file handling (orchestration files only)
  keepFiles: false  # Set to true for debugging orchestration
  
  # Performance for coordination
  maxConcurrentOrchestrations: 10
  
  # Client communication
  clientTimeout: 300  # 5 minutes for client responses
  coordinationInterval: 30  # 30 seconds between coordination checks 